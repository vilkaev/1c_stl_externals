#Область ПеременныеИНН

Перем	ИННСанинбев;	
Перем 	ИННПочтаРоссии;
Перем 	ИНННестле;
Перем 	ИННФерреро;
Перем 	ИННМВИДЕО;
Перем 	ИННОБИ;
Перем 	ИННМПК;
Перем 	ИННБалтика;
Перем 	ИННКокаКола;
Перем 	ИННСпортмастер;
Перем 	ИННСетраЛубрикатс;
Перем   ИННГрузовыеПеревозки;
Перем   ИННКордиант;
Перем   ИННАвтодизель;
Перем   ИННКонтрагента;
Перем 	ИННМайФудс;
Перем 	ИннНГКМ;

#КонецОбласти 

Функция ДокументЗаполненНекорректно(ДокументПечати)
	Результат = Ложь;
	Если ДокументПечати.Филиал.Пустая() Тогда
	 	Сообщить("Филиал не указан!");
		Результат = Истина;
	Иначе
		Если НЕ ЗначениеЗаполнено(ДокументПечати.Филиал.ГородФилиала) Тогда
		 	Сообщить("Город Филиала не указан!");
			Результат = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции // КонтрольЗаполненияДокумента()

Функция ПолучитьТаблицуДокумента(СсылкаНаОбъект)

	Запрос = новый запрос;
	Запрос.УстановитьПараметр("МассивОбъектов",СсылкаНаОбъект);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслугУслуги.Номенклатура КАК Номенклатура,
	               |	РеализацияТоваровУслугУслуги.Сумма КАК Сумма,
	               |	РеализацияТоваровУслугУслуги.Количество КАК Количество,
	               |	РеализацияТоваровУслугУслуги.Цена КАК Цена,
	               |	РеализацияТоваровУслугУслуги.Ссылка КАК Ссылка,
	               |	РеализацияТоваровУслугУслуги.Маршрут КАК Маршрут,
	               |	РеализацияТоваровУслугУслуги.Заявка КАК Заявка,
	               |	РеализацияТоваровУслугУслуги.СуммаНДС КАК СуммаНДС,
	               |	РеализацияТоваровУслугУслуги.СуммаНДС + РеализацияТоваровУслугУслуги.Сумма КАК Всего,
	               |	РеализацияТоваровУслугУслуги.НомерСтроки КАК НомерСтроки,
	               |	РеализацияТоваровУслугУслуги.Ссылка.Номер КАК НомерДок,
	               |	РеализацияТоваровУслугУслуги.Ссылка.Дата КАК ДатаДок,
	               |	РеализацияТоваровУслугУслуги.Ссылка.ВалютаДокумента КАК Валюта,
	               |	РеализацияТоваровУслугУслуги.Ссылка.КурсВзаиморасчетов КАК Курс,
	               |	РеализацияТоваровУслугУслуги.Номенклатура.Наименование КАК ТоварНаименование,
	               |	РеализацияТоваровУслугУслуги.СтавкаНДС КАК СтавкаНДС
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	               |ГДЕ
	               |	РеализацияТоваровУслугУслуги.Ссылка В(&МассивОбъектов)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Ссылка,
	               |	НомерСтроки";
	
	ОбщаяВыборка = Запрос.Выполнить().Выгрузить();
	
	Возврат ОбщаяВыборка;
КонецФункции // ПолучитьТаблицуДокумента()

Функция ПолучитьСтрокуНДС(ВалютаД,НДС,Курс)
	
	СтвкаНДС 	= Перечисления.СтавкиНДС.НДС18;
	
	СумНДС 		= Формат(НДС * Курс, "ЧДЦ=2")+?(ЗначениеЗаполнено(ВалютаД)," "+ВалютаД.Наименование,"");
	СтрНДС 		= "НДС("+(СтвкаНДС)+")- "+СумНДС; 
	
	Возврат СтрНДС;
	
КонецФункции // ПолучитьСтрокуНДС()

// Функция формирует табличный документ с Внешней печатной формой
//
// Возвращаемое значение:
//  Табличный документ - печатная форма акта
Функция ПечатьВнешнейПечатнойФормы(МассивОбъектов, ОбъектыПечати ) Экспорт
	// вызов всех вариантов печати Актов определяемых по ИНН контрагента
	
	ТабДок = Новый ТабличныйДокумент;
	Если НЕ МассивОбъектов.Количество()=0 Тогда
		
		ДокументПечати  = МассивОбъектов[0];
		Если ДокументЗаполненНекорректно(ДокументПечати) Тогда
			Возврат ТабДок;
		КонецЕсли;
		
		Контрагент		= ДокументПечати.Контрагент.Ссылка;
		ИННКонтрагента 	= Контрагент.ИНН;

		Если ИННКонтрагента 	= ИННМПК Тогда		
			ТабДок = ПолучитьТабДок_МПК(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);						
		ИначеЕсли ИННКонтрагента 	= ИННАвтодизель И СтрНайти(ДокументПечати.Ссылка.ДоговорКонтрагента.Наименование, "РГ15")>0 Тогда
			ТабДок = ПолучитьТабДок_Автодизель(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);			
		Иначе		
			ТабДок = ПолучитьТабДок_Типовой(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);
		КонецЕсли;
		
		Возврат ТабДок;
		
	КонецЕсли;
	Возврат ТабДок;
	
КонецФункции // 

Функция ПолучитьТабДок_Автодизель(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
	
	Макет =  ПолучитьМакет("Счет_Типовой"); 
	
	////////////////////////////////////////////////////////////////////////////////////////////////
	// Шапка
	СведенияОПоставщике       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);		
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Номер = СокрЛП(СсылкаНаОбъект.Номер);
	ОбластьМакетаШапка.Параметры.Дата = Формат(СсылкаНаОбъект.Дата, "ДЛФ=DD");		
	ОбластьМакетаШапка.Параметры.Заполнить(СведенияОПоставщике);		
	ТабДок.Вывести(ОбластьМакетаШапка);
	
	// грузополучатель
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент,  СсылкаНаОбъект.Дата);
	ОбластьГрузополучатель            = Макет.ПолучитьОбласть("Грузополучатель");
	ОбластьГрузополучатель.Параметры.Заполнить(СведенияОГрузополучателе);
	ТабДок.Вывести(ОбластьГрузополучатель);	
	
	НазваниеУслугиКонтрагента = "";
	ОтветственныйКонтрагента = Справочники.яРуководителиКонтрагента.ВернутьКонтактноеЛицо(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Филиал);	
	Если НЕ ОтветственныйКонтрагента.Пустая() Тогда		
		НазваниеУслугиКонтрагента = ОтветственныйКонтрагента.НаименованиеУслуги;		
	КонецЕсли; 
	
	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(ОбластьЗаголовок);
	////////////////////////////////////////////////////////////////////////////////////////////////	
		
	
	ИтогоСумма = 0;
	ИтогоНДС   = 0;  
	ИтогоВего  = 0;
	Режим      = 3; // Акт
	ЕстьСтрокиСоСтавкойНДС=Ложь;
	СтавкаНДСизСтроки = Перечисления.СтавкиНДС.БезНДС;
	НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
	Ном=1;	
	ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");	
	ИтСуммаНДС = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");

		Цена = ИтСумма;
		Сумма = ИтСумма;
		НДС   = ИтСуммаНДС;
		Всего = ИтСумма+ИтСуммаНДС;
		                                                        
		НаименованиеТовара = "Транспортные услуги по договору №РГ15 от 01.04.2015";
		
		
		Если НЕ НазваниеУслугиКонтрагента="" Тогда		
			НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", НазваниеУслугиКонтрагента);					
		КонецЕсли; 	
		
		ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
		
			ЕдИзм = "шт";
			Колво = "1";
		
		ОбластьСтрока.Параметры.Ном 	= Ном;
		ОбластьСтрока.Параметры.Маршрут = НаименованиеТовара;
		
		ОбластьСтрока.Параметры.ЕдИзм 	= ЕдИзм;
		ОбластьСтрока.Параметры.Колво 	= Колво;

		ОбластьСтрока.Параметры.Цена 	= Цена;
		ОбластьСтрока.Параметры.Сумма 	= Сумма;
		ТабДок.Вывести(ОбластьСтрока);
		
	ЕстьСтрокиСоСтавкойНДС=Истина;
		
	ЕстьНДС=НЕ СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	Если ИтСуммаНДС=0 И НЕ ЕстьСтрокиСоСтавкойНДС Тогда
		ЕстьНДС=Ложь;
	Иначе
		ЕстьНДС=Истина;
	КонецЕсли; 	
	
	Если ЕстьНДС Тогда
		ИтНДС   = ИтСуммаНДС;
		ИтВсего = ИтСумма+ИтСуммаНДС;	
	Иначе
		ИтНДС   = "-";
		ИтВсего = ИтСумма;
	КонецЕсли;
	
	ОбластьИтоги 	= Макет.ПолучитьОбласть("Итоги");	
	
	Если ЕстьНДС Тогда
		СтавкаНДС = СтавкаНДСизСтроки;
	Иначе
		СтавкаНДС = "";
	КонецЕсли; 
	
	Если ЕстьНДС Тогда
		ОбластьИтоги.Параметры.НадписьНДС	= "НДС ("+СтавкаНДС+"):";		
	Иначе
		ОбластьИтоги.Параметры.НадписьНДС	= "Без налога (НДС):";	
	КонецЕсли; 

	ОбластьИтоги.Параметры.ИтСумма	= ИтСумма;
	ОбластьИтоги.Параметры.ИтНДС	= ИтНДС;
	ОбластьИтоги.Параметры.ИтВсего 	= ИтВсего;
	
	ТабДок.Вывести(ОбластьИтоги);	
	
	////////// определить подвал ////////////////////
	ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
	
	КоличествоСтрок = СсылкаНаОбъект.Услуги.Количество();
	
	ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
	СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
	
	ОбластьПодвал.Параметры.КоличествоСтрок = 1;
//	ОбластьПодвал.Параметры.ИтНДС	= Формат(ИтНДС,"ЧДЦ=2; ЧРД=.");
	ОбластьПодвал.Параметры.ПечИтВсего 		= Формат(ИтВсего,"ЧДЦ=2; ЧРД=.");
	
	Если ЕстьНДС Тогда                                                       
		ОбластьПодвал.Параметры.ДополнениеНДС	= ", в т.ч. НДС 18% " +Формат(ИтНДС,"ЧДЦ=2; ЧРД=.");
	Иначе
		ОбластьПодвал.Параметры.ДополнениеНДС = ", без НДС.";
	КонецЕсли; 
	
	ОбластьПодвал.Параметры.СуммаПрописью = СуммаПрописью;
	
	Параметры = Новый Структура("Организация,Период,ОтветственноеЛицо",СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель); 
	
	ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;
	
	Если ЗначениеЗаполнено(ПодписьРуководителя) Тогда
		ОбластьПодвал.Параметры.ПодписьРуководителя =ПодписьРуководителя;
	Иначе
		ОбластьПодвал.Параметры.ПодписьРуководителя ="Черников И.Е.";
	КонецЕсли; 
	
	
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабДок.Вывод=ИспользованиеВывода.Разрешить;
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	
	Возврат ТабДок;
КонецФункции

Функция ПолучитьТабДок_МПК(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
	
	Макет =  ПолучитьМакет("Счет_Типовой"); 
	
	////////////////////////////////////////////////////////////////////////////////////////////////
	// Шапка
	СведенияОПоставщике       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);		
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Номер = СокрЛП(СсылкаНаОбъект.Номер);
	ОбластьМакетаШапка.Параметры.Дата = Формат(СсылкаНаОбъект.Дата, "ДЛФ=DD");		
	ОбластьМакетаШапка.Параметры.Заполнить(СведенияОПоставщике);		
	ТабДок.Вывести(ОбластьМакетаШапка);
	
	// грузополучатель
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент,  СсылкаНаОбъект.Дата);
	ОбластьГрузополучатель            = Макет.ПолучитьОбласть("Грузополучатель");
	ОбластьГрузополучатель.Параметры.Заполнить(СведенияОГрузополучателе);
	ТабДок.Вывести(ОбластьГрузополучатель);	
	
	НазваниеУслугиКонтрагента = "";
	ОтветственныйКонтрагента = Справочники.яРуководителиКонтрагента.ВернутьКонтактноеЛицо(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Филиал);	
	Если НЕ ОтветственныйКонтрагента.Пустая() Тогда		
		НазваниеУслугиКонтрагента = ОтветственныйКонтрагента.НаименованиеУслуги;		
	КонецЕсли; 
	
	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(ОбластьЗаголовок);
	////////////////////////////////////////////////////////////////////////////////////////////////	
		
	
	ИтогоСумма = 0;
	ИтогоНДС   = 0;  
	ИтогоВего  = 0;
	Режим      = 3; // Акт
	ЕстьСтрокиСоСтавкойНДС=Ложь;
	СтавкаНДСизСтроки = Перечисления.СтавкиНДС.БезНДС;
	НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
Ном=1;	
	ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");	
	ИтСуммаНДС = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");

		Цена = ИтСумма;
		Сумма = ИтСумма;
		НДС   = ИтСуммаНДС;
		Всего = ИтСумма+ИтСуммаНДС;
		
		НаименованиеТовара = "Транспортные услуги по договору №ТО-317/14 от 01.10.14 на основании реестра "+СокрЛП(СсылкаНаОбъект.Номер) + " от " + Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
		
		
		Если НЕ НазваниеУслугиКонтрагента="" Тогда		
			НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", НазваниеУслугиКонтрагента);					
		КонецЕсли; 	
		
		ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
		
			ЕдИзм = "шт";
			Колво = "1";
		
		ОбластьСтрока.Параметры.Ном 	= Ном;
		ОбластьСтрока.Параметры.Маршрут = НаименованиеТовара;
		
		ОбластьСтрока.Параметры.ЕдИзм 	= ЕдИзм;
		ОбластьСтрока.Параметры.Колво 	= Колво;

		ОбластьСтрока.Параметры.Цена 	= Цена;
		ОбластьСтрока.Параметры.Сумма 	= Сумма;
		ТабДок.Вывести(ОбластьСтрока);
		
	ЕстьСтрокиСоСтавкойНДС=Истина;
		
	ЕстьНДС=НЕ СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	Если ИтСуммаНДС=0 И НЕ ЕстьСтрокиСоСтавкойНДС Тогда
		ЕстьНДС=Ложь;
	Иначе
		ЕстьНДС=Истина;
	КонецЕсли; 	
	
	Если ЕстьНДС Тогда
		ИтНДС   = ИтСуммаНДС;
		ИтВсего = ИтСумма+ИтСуммаНДС;	
	Иначе
		ИтНДС   = "-";
		ИтВсего = ИтСумма;
	КонецЕсли;
	
	ОбластьИтоги 	= Макет.ПолучитьОбласть("Итоги");	
	
	Если ЕстьНДС Тогда
		СтавкаНДС = СтавкаНДСизСтроки;
	Иначе
		СтавкаНДС = "";
	КонецЕсли; 
	
	Если ЕстьНДС Тогда
		ОбластьИтоги.Параметры.НадписьНДС	= "НДС ("+СтавкаНДС+"):";		
	Иначе
		ОбластьИтоги.Параметры.НадписьНДС	= "Без налога (НДС):";	
	КонецЕсли; 

	ОбластьИтоги.Параметры.ИтСумма	= ИтСумма;
	ОбластьИтоги.Параметры.ИтНДС	= ИтНДС;
	ОбластьИтоги.Параметры.ИтВсего 	= ИтВсего;
	
	ТабДок.Вывести(ОбластьИтоги);	
	
	////////// определить подвал ////////////////////
	ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
	
	КоличествоСтрок = СсылкаНаОбъект.Услуги.Количество();
	
	ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
	СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
	
	ОбластьПодвал.Параметры.КоличествоСтрок = 1;
//	ОбластьПодвал.Параметры.ИтНДС	= Формат(ИтНДС,"ЧДЦ=2; ЧРД=.");
	ОбластьПодвал.Параметры.ПечИтВсего 		= Формат(ИтВсего,"ЧДЦ=2; ЧРД=.");
	
	Если ЕстьНДС Тогда                                                       
		ОбластьПодвал.Параметры.ДополнениеНДС	= ", в т.ч. НДС 18% " +Формат(ИтНДС,"ЧДЦ=2; ЧРД=.");
	Иначе
		ОбластьПодвал.Параметры.ДополнениеНДС = ", без НДС.";
	КонецЕсли; 
	
	ОбластьПодвал.Параметры.СуммаПрописью = СуммаПрописью;
	
	Параметры = Новый Структура("Организация,Период,ОтветственноеЛицо",СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель); 
	
	ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;
	
	Если ЗначениеЗаполнено(ПодписьРуководителя) Тогда
		ОбластьПодвал.Параметры.ПодписьРуководителя =ПодписьРуководителя;
	Иначе
		ОбластьПодвал.Параметры.ПодписьРуководителя ="Черников И.Е.";
	КонецЕсли; 
	
	
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабДок.Вывод=ИспользованиеВывода.Разрешить;
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	
	Возврат ТабДок;
КонецФункции

Функция ПолучитьТабДок_Типовой(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
	
	Макет =  ПолучитьМакет("Счет_Типовой"); 
	
	////////////////////////////////////////////////////////////////////////////////////////////////
	// Шапка
	
	ОбластьМакетаПредШапка   = Макет.ПолучитьОбласть("ПредШапка");
	Если ИННКонтрагента = ИННГрузовыеПеревозки Тогда
	    ТабДок.Вывести(ОбластьМакетаПредШапка);
	КонецЕсли;

	СведенияОПоставщике       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);
	ОбластьМакетаШапка        = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Номер = СокрЛП(СсылкаНаОбъект.Номер);
	ОбластьМакетаШапка.Параметры.Дата = Формат(СсылкаНаОбъект.Дата, "ДЛФ=DD");		
	
	ОбластьМакетаШапка.Параметры.Заполнить(СведенияОПоставщике);		
	
	Если ИННКонтрагента = ИННБалтика Тогда			
		ОбластьМакетаШапка.Параметры.ЮридическийАдрес = "140090, ОБЛАСТЬ МОСКОВСКАЯ, ГОРОД ДЗЕРЖИНСКИЙ, УЛИЦА ЭНЕРГЕТИКОВ, ДОМ 24, ПОМЕЩЕНИЕ 401, 402";
//		АдресПокупателя = "194292, ГОРОД САНКТ-ПЕТЕРБУРГ, ПЕРЕУЛОК 6-Й ВЕРХНИЙ, 3";
	КонецЕсли;

	ТабДок.Вывести(ОбластьМакетаШапка);
	
	Если ИННКонтрагента = ИННСанинбев Тогда
		ОбластьПоРеестру 	= Макет.ПолучитьОбласть("ПоРеестру");
		ТабДок.Вывести(ОбластьПоРеестру);
	КонецЕсли; 	
	
	// грузополучатель
	СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент,  СсылкаНаОбъект.Дата);
	Если ИННКонтрагента = ИннНГКМ Тогда
		ОбластьШапкаИсполнитель = Макет.ПолучитьОбласть("ОбластьШапкаИсполнитель");
		ОбластьШапкаИсполнитель.Параметры.Заполнить(СведенияОПоставщике);
		ТабДок.Вывести(ОбластьШапкаИсполнитель);	
		
		ОбластьШапкаЗаказчик            = Макет.ПолучитьОбласть("ОбластьШапкаЗаказчик");
		ОбластьШапкаЗаказчик.Параметры.Заполнить(СведенияОГрузополучателе);
		ТабДок.Вывести(ОбластьШапкаЗаказчик);	
		
		ОбластьШапкаОснование = Макет.ПолучитьОбласть("ОбластьШапкаОснование");
		ПредставлениеДоговора = УправлениеДоговорами.ПолучитьПредставлениеДоговораДляПечати(СсылкаНаОбъект.ДоговорКонтрагента);
		ОбластьШапкаОснование.Параметры.ПредставлениеДоговора = ПредставлениеДоговора;
		ТабДок.Вывести(ОбластьШапкаОснование);
		
	Иначе
		ОбластьГрузополучатель            = Макет.ПолучитьОбласть("Грузополучатель");
		ОбластьГрузополучатель.Параметры.Заполнить(СведенияОГрузополучателе);
		ТабДок.Вывести(ОбластьГрузополучатель);	
	КонецЕсли; 
	
	
	Если ИННКонтрагента = ИННОБИ Тогда
		ОбластьОснованиеОБИ = Макет.ПолучитьОбласть("ОснованиеОБИ");		
		ОбластьОснованиеОБИ.Параметры.Договор = "На основании договора транспортной экспедиции № 4088_16 от 06 апреля 2016г.";
		ТабДок.Вывести(ОбластьОснованиеОБИ);
	КонецЕсли; 
	
	Если ИННКонтрагента = ИННСпортмастер Тогда
		ОбластьОснованиеОБИ = Макет.ПолучитьОбласть("ОснованиеОБИ");		
		ОбластьОснованиеОБИ.Параметры.Договор = "по договору № СМ/Русглобал-пб-2017 от 27.11.2017 г.";
		ТабДок.Вывести(ОбластьОснованиеОБИ);
	КонецЕсли; 

	НазваниеУслугиКонтрагента = ""; НазваниеУслугиВШапкеАкта="";
	ОтветственныйКонтрагента = Справочники.яРуководителиКонтрагента.ВернутьКонтактноеЛицо(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Филиал);	
	Если НЕ ОтветственныйКонтрагента.Пустая() Тогда		
		НазваниеУслугиКонтрагента = ОтветственныйКонтрагента.НаименованиеУслуги;		
		НазваниеУслугиВШапкеАкта = ОтветственныйКонтрагента.НазваниеУслугиВШапкеАкта;
	КонецЕсли; 
	
	Если ИННКонтрагента = ИНННестле Тогда
		ОбластьШапкаНестле = Макет.ПолучитьОбласть("ШапкаНестле");		
		ОбластьШапкаНестле.Параметры.РО	= СсылкаНаОбъект.РО;		
		ОбластьШапкаНестле.Параметры.Проформа	= СсылкаНаОбъект.Проформа;		
		ТабДок.Вывести(ОбластьШапкаНестле);
	КонецЕсли; 	
	
	Если ИННКонтрагента = ИННСетраЛубрикатс Тогда
		ОбластьСетра 	= Макет.ПолучитьОбласть("ОбластьСетра");
		ОбластьСетра.Параметры.ПечПоставщик	= СведенияОПоставщике.ПолноеНаименование+" ИНН: "+СведенияОПоставщике.ИНН+" КПП:"+ СведенияОПоставщике.КПП+" Адрес: "+СведенияОПоставщике.ЮридическийАдрес;
		ОбластьСетра.Параметры.ПечПокупатель= СведенияОГрузополучателе.ПолноеНаименование+", ИНН: "+СведенияОГрузополучателе.ИНН+" КПП:"+ СведенияОГрузополучателе.КПП+" Адрес: "+СведенияОГрузополучателе.ЮридическийАдрес;
		ТабДок.Вывести(ОбластьСетра);
	КонецЕсли; 
	
	Если ИННКонтрагента = ИННСанинбев Тогда
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("ЗаголовокСанИнБев");
	Иначе
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	КонецЕсли; 
	ТабДок.Вывести(ОбластьЗаголовок);
	
	////////////////////////////////////////////////////////////////////////////////////////////////	
		
	ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Ссылка",СсылкаНаОбъект);
	
	Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);
	
	ИтогоСумма = 0;
	ИтогоНДС   = 0;  
	ИтогоВего  = 0;
	Режим      = 3; // Акт
	ЕстьСтрокиСоСтавкойНДС=Ложь;
	СтавкаНДСизСтроки = Перечисления.СтавкиНДС.БезНДС;
	НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
	
	Филиал = СокрЛП(СсылкаНаОбъект.Филиал.Наименование);
	Для Каждого Стр из Выборка Цикл
		Заявка 				= Стр.Заявка;
		Ном   				= Стр.НомерСтроки;
		
		
		СтруктураПечатиСтроки = Неопределено;
		
		ЭтоПростой = Ложь;
		Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
			ЭтоПростой = Истина;
			НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиПретензия();
			Заявка = Заявка.Заявка; //для простоя надо брать данные из док основания претензии
		КонецЕсли;
		
		Если Заявка.Пустая() Тогда
			ФИОВодителя 		= "";			
		Иначе
			ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
		КонецЕсли; 
		
		Цена = Стр.Сумма;
		Сумма = Стр.Сумма;
		НДС   = Стр.СуммаНДС;
		Всего = Сумма+НДС;
		
		Если Заявка.Пустая() Тогда
			НаименованиеТовара = Стр.ТоварНаименование;
		Иначе
			НаименованиеТовара = яОбщийМодуль.СформироватьСтрокуНаименованиеТовара(Стр, НастройкиПечати, "Счет", ЭтоПростой, СтруктураПечатиСтроки);		
		КонецЕсли;
		
		Если ИННКонтрагента = ИННФерреро Тогда			
			НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", "Транспортные услуги");			
		КонецЕсли; 
		
		//Андреев		
		Если ИННКонтрагента = ИННКокаКола Тогда			
			НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", "Tpанспортно-экспедиционные услуги");			
		КонецЕсли;
		
		Если НЕ НазваниеУслугиКонтрагента="" Тогда		
			НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", НазваниеУслугиКонтрагента);					
		КонецЕсли; 	
		
		Если ИННКонтрагента = ИННМВИДЕО Тогда
		    НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Дата загрузки:", " от ");
			НаименованиеТовара = СтрЗаменить(НаименованиеТовара, ", Дата выгрузки:", " - ");
		КонецЕсли; 		
		
		Если ИННКонтрагента = ИННМВИДЕО и СсылкаНаОбъект.ДоговорКонтрагента.Наименование ="01-0291/02-2015 от 27.02.2015" Тогда
			НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "ПРОСТОЙ", "Транспортно-экспедиционные услуги");			
		КонецЕсли; 

		Если ИННКонтрагента = ИННСанинбев Тогда
			ОбластьСтрока 	= Макет.ПолучитьОбласть("СтрокаСанИнБев");
			ОбластьСтрока.Параметры.НомерЗаказа 	= Заявка.НомерЗаказа;
		Иначе
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
		КонецЕсли; 
		
		Если ИННКонтрагента = ИННПочтаРоссии Тогда                                                                                                                                                                                                                                         
			НаименованиеТовара = "Перевозка почтовых отправлений и прочих товарно-материальных ценностей по магистральным маршрутам по договору № 31502785781/7 от 29.02.2016 за период с "+Формат(Заявка.Дата, "ДЛФ=Д")+" по "+Формат(Заявка.Дата, "ДЛФ=Д")+" согласно акта приёмки-сдачи оказанных услуг "+Заявка.Номер+" от "+Формат(Заявка.Дата, "ДЛФ=Д");
			ЕдИзм = "---";
			Колво = "---";
		ИначеЕсли ИННКонтрагента = ИННГрузовыеПеревозки Тогда                                                                                                                                                                                                                                         
			НаименованиеТовара = "Услуги автомобильного транспорта";
			Цена  = "-";
			ЕдИзм = "-";
			Колво = "-";				
		ИначеЕсли ИННКонтрагента = ИННКордиант Тогда						
			ЕдИзм = "-";
			Колво = "-";			
		ИначеЕсли (ИННКонтрагента = ИННБалтика) И (Филиал ="Челябинск") Тогда
			//НазваниеУслугиВШапкеАкта = СтрЗаменить(НазваниеУслугиВШапкеАкта, "Услуги по перевозке грузов по дог. №", "Перевозка грузов по договору №");
		    НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Услуги по перевозке грузов по дог. №", "Перевозка грузов по договору №");
		//ИначеЕсли ИННКонтрагента = ИннНГКМ Тогда 
		//	ЕдИзм = "рейс";
		//	КолВо = "1";
		//	НаименованиеТоваров = "Услуги по организации и выполнению перевозок грузка по [ПредставлениеДогоговора], [ПредставлениеЗаяки], [ПредставлениеРеестра] [ПредставлениеПериода]";
		//	ПредставлениеДоговора = ПредставлениеДоговора;
		//	ПредставлениеЗаявки = "Заявка
		//	
		//	СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(
		
		ИначеЕсли ИННКонтрагента = ИннНГКМ Тогда 
			ЕдИзм = "рейс";
			КолВо = "1";
			//ПредставлениеПериода = СтрШаблон("Период %1 - %2", СтруктураПечатиСтроки.ДатаПогрузки, СтруктураПечатиСтроки.ДатаРазгрузки);
			//НаименованиеТовара = НаименованиеТовара + ПредставлениеПериода;
		Иначе
			ЕдИзм = "шт";
			Колво = "1";
		КонецЕсли; 
		
		Если НЕ Стр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ЕстьСтрокиСоСтавкойНДС=Истина;
			СтавкаНДСизСтроки = Стр.СтавкаНДС;
		КонецЕсли;
		
		Если ИННКонтрагента = ИННСетраЛубрикатс Тогда
			Продолжить;
		КонецЕсли;		
		
		ОбластьСтрока.Параметры.Ном 	= Ном;
		ОбластьСтрока.Параметры.Маршрут = НаименованиеТовара;
		
		ОбластьСтрока.Параметры.ЕдИзм 	= ЕдИзм;
		ОбластьСтрока.Параметры.Колво 	= Колво;
		
		ОбластьСтрока.Параметры.Цена 	= Цена;
		ОбластьСтрока.Параметры.Сумма 	= Сумма;
		ТабДок.Вывести(ОбластьСтрока);
		
		
		Если ИННКонтрагента = ИННГрузовыеПеревозки Тогда
			ТабДок.Область(ТабДок.ВысотаТаблицы,5,ТабДок.ВысотаТаблицы,5).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр; 
			ТабДок.Область(ТабДок.ВысотаТаблицы,6,ТабДок.ВысотаТаблицы,6).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр; 
			ТабДок.Область(ТабДок.ВысотаТаблицы,7,ТабДок.ВысотаТаблицы,7).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр; 
			
			ТабДок.Область(ТабДок.ВысотаТаблицы,8,ТабДок.ВысотаТаблицы,8).Шрифт = Новый Шрифт(,,Истина);			
			
		КонецЕсли;
		
		
		Если НастройкиПечати.Счет_АвтоОтдельнойСтрокой Тогда
			
			ОбластьАвто 	= Макет.ПолучитьОбласть("Авто");
			
			Если Заявка.Пустая() Тогда
				Авто = "";
			Иначе
				ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
				Авто = Заявка.ПараметрыПеревозки[0].ТС.Наименование;
				Авто = "а/м-"+Авто;
			КонецЕсли; 
			
			Если НастройкиПечати.Счет_Прицеп Тогда				
				
				Если Заявка.Пустая() Тогда
					Прицеп = "";
				Иначе
					Прицеп = Заявка.ПараметрыПеревозки[0].Прицеп.Наименование;
				КонецЕсли; 

				Авто = Авто +  ?(СокрЛП(Прицеп)="" ,"",   " / "+Прицеп);				 
			КонецЕсли; 
			
			ОбластьАвто.Параметры.Авто 	= Авто;
			
			ТабДок.Вывести(Областьавто);
			
		КонецЕсли;
		
		
	КонецЦикла;	 
	
	//СтавкаНДСЧисло = яОбщийМодуль.ПолучитьСтавкуНДС(СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС);
	
	ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");	
	ИтСуммаНДС = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
	
	ЕстьНДС=НЕ СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	Если ИтСуммаНДС=0 И НЕ ЕстьСтрокиСоСтавкойНДС Тогда
		ЕстьНДС=Ложь;
	Иначе
		ЕстьНДС=Истина;
	КонецЕсли; 	
	
	Если ЕстьНДС Тогда
		ИтНДС   = ИтСуммаНДС;
		ИтВсего = ИтСумма+ИтСуммаНДС;	
	Иначе
		ИтНДС   = "-";
		ИтВсего = ИтСумма;
	КонецЕсли; 

	
	Если ИННКонтрагента = ИННСетраЛубрикатс Тогда
		ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");		
		
		НаименованиеТовара = "Транспортно-экспедиционные услуги за период с  по  в соответствии с Реестром выполненных работ №  от по Договору на транспортно-экспедиционное обслуживание №TR-RUSGLB-17-01 от 04/09/17";
		
		ОбластьСтрока.Параметры.Ном 	= 1;
		ОбластьСтрока.Параметры.Маршрут = НаименованиеТовара;
		
		ОбластьСтрока.Параметры.ЕдИзм 	= "";
		ОбластьСтрока.Параметры.Колво 	= "";

		ОбластьСтрока.Параметры.Цена 	= "";
		ОбластьСтрока.Параметры.Сумма 	= ИтСумма;
		
		ТабДок.Вывести(ОбластьСтрока);

	КонецЕсли;		

	
	
	ОбластьИтоги 	= Макет.ПолучитьОбласть("Итоги");	
	
	Если ЕстьНДС Тогда
		СтавкаНДС = СтавкаНДСизСтроки;
	Иначе
		СтавкаНДС = "";
	КонецЕсли; 
	
	Если ЕстьНДС Тогда
		ОбластьИтоги.Параметры.НадписьНДС	= "НДС ("+СтавкаНДС+"):";		
	Иначе
		ОбластьИтоги.Параметры.НадписьНДС	= "Без налога (НДС):";	
	КонецЕсли; 

	ОбластьИтоги.Параметры.ИтСумма	= ИтСумма;
	ОбластьИтоги.Параметры.ИтНДС	= ИтНДС;
	ОбластьИтоги.Параметры.ИтВсего 	= ИтВсего;
	
	ТабДок.Вывести(ОбластьИтоги);	
	
	////////// определить подвал ////////////////////
	ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
	
	КоличествоСтрок = СсылкаНаОбъект.Услуги.Количество();
	
	ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
	СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
	
	ОбластьПодвал.Параметры.КоличествоСтрок = КоличествоСтрок;
//	ОбластьПодвал.Параметры.ИтНДС	= Формат(ИтНДС,"ЧДЦ=2; ЧРД=.");
	ОбластьПодвал.Параметры.ПечИтВсего 		= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтВсего, ВалютаДокумента);
	
	Если ЕстьНДС Тогда                                                       
		ОбластьПодвал.Параметры.ДополнениеНДС	= ", в т.ч. НДС "+СтавкаНДС+" " +Формат(ИтНДС,"ЧДЦ=2; ЧРД=.");
	Иначе
		ОбластьПодвал.Параметры.ДополнениеНДС = ", без НДС.";
	КонецЕсли; 
	
	ОбластьПодвал.Параметры.СуммаПрописью = СуммаПрописью;
	
	Параметры = Новый Структура("Организация,Период,ОтветственноеЛицо",СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель); 
	
	ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;
	
	Если ЗначениеЗаполнено(ПодписьРуководителя) Тогда
		ОбластьПодвал.Параметры.ПодписьРуководителя =ПодписьРуководителя;
	Иначе
		ОбластьПодвал.Параметры.ПодписьРуководителя ="Черников И.Е.";
	КонецЕсли; 
	
	
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабДок.Вывод=ИспользованиеВывода.Разрешить;
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	
	ТабДок.ВерхнийКолонтитул.НачальнаяСтраница = 2;
	ТабДок.ВерхнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
	ТабДок.ВерхнийКолонтитул.ТекстСлева="Лист [&НомерСтраницы] сч/ф № "+СокрЛП(СсылкаНаОбъект.Номер)+" от "+Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
	ТабДок.ВерхнийКолонтитул.Выводить = Истина;

	
	Возврат ТабДок;
КонецФункции

// Экспортная процедура печати, вызываемая из основной программы
//
// Параметры:
// ВХОДЯЩИЕ:
//  МассивОбъектовНазначения - Массив - список объектов ссылочного типа для печати документа
//                 Как правило, содержит один элемент с ссылкой на вызвавший форму объект (документ, справочник)
//
// ИСХОДЯЩИЕ:
//  КоллекцияПечатныхФорм - ТаблицаЗначений - таблица сформированных табличных документов.
//                 Как правило, содержит одну строку с именем текущей печатной формы
//  ОбъектыПечати - СписокЗначений - список объектов печати. 
//  ПараметрыВывода - Структура - Параметры сформированных табличных документов. Содержит поля:
//  						ДоступнаПечатьПоКомплектно - булево - по умолчанию Ложь
//							ПолучательЭлектронногоПисьма
//							ОтправительЭлектронногоПисьма
//
Процедура Печать(МассивОбъектовНазначения, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СЧЕТ_УПР") Тогда 
		ТабличныйДокумент = ПечатьВнешнейПечатнойФормы(МассивОбъектовНазначения, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СЧЕТ_УПР", "СЧЕТ УПР", ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

#Область СведенияОВнешнейОбработке
// Сервисная экспортная функция. Вызывается в основной программе при регистрации обработки в информационной базе
// Возвращает структуру с параметрами регистрации
//
// Возвращаемое значение:
//		Структура с полями:
//			Вид - строка, вид обработки, один из возможных: "ДополнительнаяОбработка", "ДополнительныйОтчет", 
//					"ЗаполнениеОбъекта", "Отчет", "ПечатнаяФорма", "СозданиеСвязанныхОбъектов"
//			Назначение - Массив строк имен объектов метаданных в формате: 
//					<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. 
//					Например, "Документ.СчетЗаказ" или "Справочник.*". Параметр имеет смысл только для назначаемых обработок, для глобальных может не задаваться.
//			Наименование - строка - Наименование обработки, которым будет заполнено наименование элемента справочника по умолчанию.
//			Информация  - строка - Краткая информация или описание по обработке.
//			Версия - строка - Версия обработки в формате “<старший номер>.<младший номер>” используется при загрузке обработок в информационную базу.
//			БезопасныйРежим - булево - Принимает значение Истина или Ложь, в зависимости от того, требуется ли устанавливать или отключать безопасный режим 
//							исполнения обработок. Если истина, обработка будет запущена в безопасном режиме. 
//
Функция СведенияОВнешнейОбработке() Экспорт
	//Инициализируем структуру с параметрами регистрации    	
	ПараметрыРегистрации = Новый Структура;
	// Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать.
	// Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов...
	
	МассивНазначений = Новый Массив;
	// Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
	// Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе,
	// которые поддерживают механизм ВПФ
	МассивНазначений.Добавить("Документ.РеализацияТоваровУслуг"); //Указываем документ к которому делаем внешнюю печ. форму   		
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	
	ПараметрыРегистрации.Вставить("Наименование", "СЧЕТ (УПР)"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);  // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
	ПараметрыРегистрации.Вставить("Версия", "8.3.001");   // эти два параметра играют больше информационную роль,
	ПараметрыРегистрации.Вставить("Информация", "СЧЕТ (УПР)"); // т.е. это то, что будет видеть пользователь в информации к обработке
	
	// Создадим таблицу команд (подробнее смотрим ниже)
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "СЧЕТ (УПР)", "СЧЕТ_УПР", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации; 	
КонецФункции
#КонецОбласти

#Область Вспомогательное
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ РЕГИСТРАЦИИ ОБРАБОТКИ
// Формирует структуру с параметрами регистрации регистрации обработки в информационной базе
//
// Параметры:
//	ОбъектыНазначенияФормы - Массив - Массив строк имен объектов метаданных в формате: 
//					<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. 
//					или строка с именем объекта метаданных 
//	НаименованиеОбработки - строка - Наименование обработки, которым будет заполнено наименование элемента справочника по умолчанию.
//							Необязательно, по умолчанию синоним или представление объекта
//	Информация  - строка - Краткая информация или описание обработки.
//							Необязательно, по умолчанию комментарий объекта
//	Версия - строка - Версия обработки в формате “<старший номер>.<младший номер>” используется при загрузке обработок в информационную базу.
//
//
// Возвращаемое значение:
//		Структура
//
Функция ПолучитьПараметрыРегистрации(ОбъектыНазначенияФормы = Неопределено, НаименованиеОбработки = "", Информация = "", Версия = "1.0")
	
	
	Если ТипЗнч(ОбъектыНазначенияФормы) = Тип("Строка") Тогда
		ОбъектНазначенияФормы = ОбъектыНазначенияФормы;
		ОбъектыНазначенияФормы = Новый Массив;
		ОбъектыНазначенияФормы.Добавить(ОбъектНазначенияФормы);
	КонецЕсли; 
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
	ПараметрыРегистрации.Вставить("Назначение", ОбъектыНазначенияФормы);
	
	Если Не ЗначениеЗаполнено(НаименованиеОбработки) Тогда
		НаименованиеОбработки = ЭтотОбъект.Метаданные().Представление();
	КонецЕсли; 
	ПараметрыРегистрации.Вставить("Наименование", НаименованиеОбработки);
	
	Если Не ЗначениеЗаполнено(Информация) Тогда
		Информация = ЭтотОбъект.Метаданные().Комментарий;
	КонецЕсли; 
	ПараметрыРегистрации.Вставить("Информация", Информация);
	
	ПараметрыРегистрации.Вставить("Версия", Версия);
	
	
	Возврат ПараметрыРегистрации;
	
	
КонецФункции

// Формирует таблицу значений с командами печати
//	
// Возвращаемое значение:
//		ТаблицаЗначений
//
Функция ПолучитьТаблицуКоманд()
	
	
	Команды = Новый ТаблицаЗначений;
	
	//Представление команды в пользовательском интерфейсе
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	
	//Уникальный идентификатор команды или имя макета печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	
	//Способ вызова команды: "ОткрытиеФормы", "ВызовКлиентскогоМетода", "ВызовСерверногоМетода"
	// "ОткрытиеФормы" - применяется только для отчетов и дополнительных отчетов
	// "ВызовКлиентскогоМетода" - вызов процедуры Печать(), определённой в модуле формы обработки
	// "ВызовСерверногоМетода" - вызов процедуры Печать(), определённой в модуле объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	
	//Показывать оповещение.
	//Если Истина, требуется показать оповещение при начале и при завершении работы обработки. 
	//Имеет смысл только при запуске обработки без открытия формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	
	//Дополнительный модификатор команды. 
	//Используется для дополнительных обработок печатных форм на основе табличных макетов.
	//Для таких команд должен содержать строку ПечатьMXL
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	
	Возврат Команды; 
КонецФункции

// Вспомогательная процедура.
//
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ВызовСерверногоМетода", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;      
КонецПроцедуры

#КонецОбласти  	

#Область ИНН
ИННСанинбев					= "5020037784";	
ИННПочтаРоссии				= "7724261610";	
ИНННестле 					= "7705739450";
ИННФерреро  				= "5044018861";
ИННМВИДЕО  					= "7707548740";
ИННОБИ  					= "7714873934";
ИННМПК  					= "5029104266";
ИННБалтика					= "7802849641";
ИННКокаКола 				= "7701215046";
ИННСпортмастер				= "7728551528";
ИННСетраЛубрикатс 			= "7707240176";
ИННГрузовыеПеревозки		= "7727816669";
ИННКордиант 				= "7601001509";
ИННАвтодизель 				= "7601000640";
ИННМайФудс 					= "7722860520";
ИннНГКМ						= "7701600369";
#КонецОбласти
