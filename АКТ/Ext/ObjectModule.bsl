
#Область ПеременныеИНН

Перем	ИННСанинбев;	
Перем 	ИННПочтаРоссии;
Перем 	ИННФерреро;
Перем   ИННРусвинил;
Перем 	ИННСИБУР;
Перем 	ИННМВИДЕО;
Перем 	ИННКимберлиКларк;
Перем 	ИННМПК;
Перем   ИНННестле;
Перем   ИННПолипластик;
Перем 	ИННКокаКола;
Перем 	ИННСпортмастер;
Перем	ИННБалтика;
Перем 	ИННСетраЛубрикатс;
Перем 	ИННБунге;
Перем   ИННГрузовыеПеревозки;
Перем   ИННКордиант;
Перем   ИННАвтодизель;
Перем 	ИННСалаир;
Перем 	ИННГас;
Перем 	ИННСТМ_Сервис;
#КонецОбласти 

Перем  ИННКонтрагента;

// Функция формирует табличный документ с Внешней печатной формой
//
// Возвращаемое значение:
//  Табличный документ - печатная форма акта
Функция ПечатьВнешнейПечатнойФормы(МассивОбъектов, ОбъектыПечати ) Экспорт
	// вызов всех вариантов печати Актов определяемых по ИНН контрагента
	
	ТабДок = Новый ТабличныйДокумент;
	Если НЕ МассивОбъектов.Количество()=0 Тогда
		
		ДокументПечати  = МассивОбъектов[0];
		Если ДокументЗаполненНекорректно(ДокументПечати) Тогда
			Возврат ТабДок;
		КонецЕсли;
		
		Контрагент		= ДокументПечати.Контрагент.Ссылка;
		ИННКонтрагента 	= Контрагент.ИНН;
		
		Если ИННКонтрагента  = ИННСИБУР Тогда			
			
			ТабДок = ПолучитьТабДок_СИБУР(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);
			
		ИначеЕсли ИННКонтрагента  = ИННКимберлиКларк Тогда			
			
			ТабДок = ПолучитьТабДок_КимберлиКларк(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);		
			
		ИначеЕсли ИННКонтрагента  = ИННПолипластик Тогда			
			
			ТабДок = ПолучитьТабДок_Полипластик(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);
			
		ИначеЕсли ИННКонтрагента = ИННКокаКола Тогда			
			
			ТабДок = ПолучитьТабДок_КокаКола(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);				
			
		ИначеЕсли ИННКонтрагента = ИННМПК Тогда			
			
			ТабДок = ПолучитьТабДок_МПК(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);			
			
		ИначеЕсли ИННКонтрагента = ИННСпортмастер Тогда			
			
			ТабДок = ПолучитьТабДок_Спортмастер(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);
			
		ИначеЕсли ИННКонтрагента = ИННБунге Тогда			
			
			ТабДок = ПолучитьТабДок_Бунге(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);
			
		ИначеЕсли ИННКонтрагента = ИННГрузовыеПеревозки Тогда
			
			ТабДок = ПолучитьТабДок_ИННГрузовыеПеревозки(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);
			
		ИначеЕсли ИННКонтрагента 	= ИННАвтодизель И СтрНайти(ДокументПечати.Ссылка.ДоговорКонтрагента.Наименование, "РГ15")>0 Тогда
			
			ТабДок = ПолучитьТабДок_Автодизель(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);					
			
		ИначеЕсли ИННКонтрагента = ИннГАС Тогда 
			
			ТабДок = ПолучитьТабДок_ГАС(ДокументПечати.Ссылка, ОбъектыПечати, ТабДок);
			
		ИначеЕсли ИННКонтрагента = ИННСТМ_Сервис Тогда 
			
			ТабДок = ПолучитьТабдДок_СТМ_Сервис(ДокументПечати.Ссылка, ОбъектыПечати, ТабДок);
			
		Иначе
			
			ТабДок = ПолучитьТабДок_Типовой(ДокументПечати.Ссылка, ОбъектыПечати,ТабДок);	
			
		КонецЕсли;
		
		Возврат ТабДок;
		
	КонецЕсли;
	Возврат ТабДок;
	
КонецФункции // 

#Область Получить_ТабДок

	Функция ПолучитьТабДок_Типовой(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_Типовой"); 
		
		//////////////////////////////////////////
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ДанныеШапки = ПолучитьДанныеШапки(СсылкаНаОбъект);
		
		РуководительФилиала=РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		РуководительРП = РуководительФилиала.ФамилияИОРП;
		
		//+++ Z 25.02.2019
		//Ответственный=ДанныеШапки.ПодписьРук; //РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		Если ЗначениеЗаполнено(ДанныеШапки.ПодписьРук) Тогда
			Ответственный = ДанныеШапки.ПодписьРук;
		Иначе
			Отбор = Новый Структура();
			Отбор.Вставить("Филиал", ДанныеШапки.Филиал);
			Отбор.Вставить("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
			Ответственный = РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Отбор).Пользователь;
		КонецЕсли;
		//--- Z 25.02.2019
		Доверенность=РегистрыСведений.яДоверенностиПользователей.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Пользователь",Ответственный));
		
		НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		
		ДолжностьРуководителяКонтрагента="";ЗаказчикВЛицеИм="";ЗаказчикВЛицеРП="";Устава ="Устава";
		
		КонтактноеЛицо = Справочники.КонтактныеЛица.КонтактноеЛицоПоУмолчанию(СсылкаНаОбъект.Контрагент);
		
		Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			РеквизитыКонтактногоЛица = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			КонтактноеЛицо, "Фамилия, Имя, Отчество, Должность, ФамилияРП, ИмяРП, ОтчествоРП, ДействуетНаОсновании");
			
			РуководительКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(
			РеквизитыКонтактногоЛица.Фамилия, 
			РеквизитыКонтактногоЛица.Имя,
			РеквизитыКонтактногоЛица.Отчество,
			Ложь);
			ДолжностьРуководителяКонтрагента = РеквизитыКонтактногоЛица.Должность;
			ПредполагаемыйПол = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(СокрП(РуководительКонтрагента));
		КонецЕсли;
		
		ЗаказчикВЛицеИм = РуководительКонтрагента;
		Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			Если СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП)="" Тогда
				ЗаказчикВЛицеРП =ЗаказчикВЛицеИм;
			Иначе
				ЗаказчикВЛицеРП =СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП);
			КонецЕсли;
			ЗаказчикВЛицеРП = ДолжностьРуководителяКонтрагента + " " + ЗаказчикВЛицеРП;
			
			ЗаказчикВЛицеИм = ЗаказчикВЛицеИм;
			
			Если СокрЛП(РеквизитыКонтактногоЛица.ДействуетНаОсновании)="" Тогда
				Устава ="Устава";
			Иначе
				Устава =РеквизитыКонтактногоЛица.ДействуетНаОсновании;
			КонецЕсли; 
			
		КонецЕсли; 
		
		ТекстДог="";
		Если НастройкиПечати.Акт_ВыводитьДоговорСверху Тогда
			ТекстДог=ТекстДоговора(СсылкаНаОбъект);
		КонецЕсли; 
		
		Если СокрЛП(Ответственный.ФамилияИОРП)="" Тогда
			ФИО 		= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(Ответственный.Фамилия+" "+Ответственный.Имя+" "+Ответственный.Отчество);
		иначе
			ФИО 		= Ответственный.ФамилияИОРП;
		КонецЕсли; 
		
		Если СокрЛП(Ответственный.ДолжностьРП)="" Тогда
			Должность 		= "";
		иначе
			Должность 		= Ответственный.ДолжностьРП;
		КонецЕсли; 
		
		Если СокрЛП(Доверенность.Доверенность) = "" Тогда
			НаОсновании = "Устава";
		иначе
			НаОсновании = "доверенности "+ Доверенность.Доверенность;
		КонецЕсли; 
		
		// ++ 15.06.2021 ИлькаевВ vilkaev@yandex.ru /STL-4/
		//		Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		//			//+++ Z 25.02.2019
		//			//ФИО 		= "Черникова И.Е.";	
		//			ФИО = "";
		//			//--- Z 25.02.2019
		//			Должность 		= "Генерального директора";
		//			НаОсновании = "Устава";
		//		КонецЕсли; 	
		Если ПустаяСтрока(ФИО) Тогда
			ОтветственныеЛица = ОтветственныеЛицаБППовтИсп.ОтветственныеЛица(СсылкаНаОбъект.Организация, ТекущаяДатаСеанса());
			ДопСтруктура = Новый Структура("ДолжностьВЛице, ПеревозчикВЛице", "", "");
			яОбщийМодуль.ЗаполнитьСклонениеОбъекта("ДолжностьВЛице", ДопСтруктура, ОтветственныеЛица.РуководительДолжность);
			яОбщийМодуль.ЗаполнитьСклонениеОбъекта("ПеревозчикВЛице", ДопСтруктура, ОтветственныеЛица.Руководитель);
			ФИО = ДопСтруктура.ПеревозчикВЛице;
			Должность = ДопСтруктура.ДолжностьВЛИце;
		КонецЕсли;                                                                             
		// -- 15.06.2021 ИлькаевВ vilkaev@yandex.ru /STL-4/	 
		
		НазваниеУслугиКонтрагента = ""; НазваниеУслугиВШапкеАкта="";
		ОтветственныйКонтрагента = Справочники.яРуководителиКонтрагента.ВернутьКонтактноеЛицо(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Филиал);	
		Если НЕ ОтветственныйКонтрагента.Пустая() Тогда
			ЗаказчикВЛицеРП = ОтветственныйКонтрагента.ДолжностьРП + " " +ОтветственныйКонтрагента.РукРодПадеж;
			Устава = ОтветственныйКонтрагента.Устав;
			ЗаказчикВЛицеИм = ОтветственныйКонтрагента.РукИмПадеж;
			ДолжностьРуководителяКонтрагента = ОтветственныйКонтрагента.ДолжностьИП;			
			
			НазваниеУслугиКонтрагента = ОтветственныйКонтрагента.НаименованиеУслуги;
			
			НазваниеУслугиВШапкеАкта = ОтветственныйКонтрагента.НазваниеУслугиВШапкеАкта;
			
		КонецЕсли; 	
		
		
		ЗаказчикВЛицеИм = ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(ЗаказчикВЛицеИм);
		
		Если ИННКонтрагента = ИННМВИДЕО Тогда
			ЗаказчикВЛицеИм="";
			ЗаказчикВЛицеРП="";
			ЗаказчикВЛице="";
			Устава = "";
		КонецЕсли;	
		
		
		Номер = ДанныеШапки.НомерДок;
		Филиал = СокрЛП(СсылкаНаОбъект.Филиал.Наименование);
		
		Если ИННКонтрагента = ИННБалтика Тогда		
			
			Номер = СокрЛП(СсылкаНаОбъект.Номер);		
			Префикс = Лев(Номер, 2); 		
			Номер = СтрЗаменить(Номер, Префикс, "");
			
			Постфикс = "";
			Если Филиал ="Ярославль" Тогда
				Постфикс = "26";			
			ИначеЕсли Филиал ="Самара" Тогда
				Постфикс = "21";			
			ИначеЕсли Филиал ="Тула" Тогда
				Постфикс = "24";	
			ИначеЕсли Филиал ="Новосибирск" Тогда
				Постфикс = "14";		
			ИначеЕсли Филиал ="Челябинск" Тогда
				Постфикс = "25";
			ИначеЕсли Филиал ="Иркутск" Тогда
				Постфикс = "29";			
			ИначеЕсли Филиал ="Ростов-на-Дону" Тогда
				Постфикс = "20";		
			ИначеЕсли Филиал ="Санкт-Петербург" Тогда
				Постфикс = "19";	
			ИначеЕсли Филиал ="Пермь" Тогда
				Постфикс = "30";
			ИначеЕсли Филиал ="Новочебоксарск" Тогда
				Постфикс = "15";		
		    ИначеЕсли Филиал ="Нижний Новгород" Тогда
				Постфикс = "13";
			ИначеЕсли Филиал ="Воронеж" Тогда
				Постфикс = "04";
			ИначеЕсли Филиал ="Краснодар" Тогда
				Постфикс = "10";
			ИначеЕсли Филиал ="Екатеринбург" Тогда
				Постфикс = "05";	
			КонецЕсли;
			
			Если НЕ Постфикс = "" Тогда
				Номер  = Номер +"/"+Постфикс;
			КонецЕсли; 				
		
		КонецЕсли; 	
		
		ОбластьМакета.Параметры.НомерДок = Номер;
		
		СТЛ = Справочники.Организации.НайтиПоНаименованию("СТЛ ООО");
		
		Если СсылкаНаОбъект.Организация = СТЛ Тогда
			Если НЕ ИННКонтрагента = ИННКордиант Тогда
				ЗаказчикВЛицеРП="";
				Устава = "";	
			КонецЕсли; 
		КонецЕсли;	
		
		ОбластьМакета.Параметры.ГородФилиала = ДанныеШапки.Филиал.ГородФилиала;
		ОбластьМакета.Параметры.ДатаДок	= Формат(ДанныеШапки.ДатаДок, "ДЛФ=DD");
		ОбластьМакета.Параметры.ПолнНаименование = ДанныеШапки.ПолнНаименование;
		ОбластьМакета.Параметры.ДолжностьВЛице = Должность;
		
		ОбластьМакета.Параметры.ПеревозчикВЛице = ФИО;
		ОбластьМакета.Параметры.НаОсновании = НаОсновании;
		ОбластьМакета.Параметры.КонтрагентНаименованиеПолное = ДанныеШапки.КонтрагентНаименованиеПолное;				
		ОбластьМакета.Параметры.ЗаказчикВЛице = ЗаказчикВЛицеРП;
		ОбластьМакета.Параметры.Устава		= Устава;
		
		Если НазваниеУслугиВШапкеАкта = "" Тогда
			ОбластьМакета.Параметры.НазваниеУслуг = "Транспортное обслуживание по маршрутам:";
		Иначе
			ОбластьМакета.Параметры.НазваниеУслуг = НазваниеУслугиВШапкеАкта;
		КонецЕсли;	
		
		ОбластьМакета.Параметры.ТекстНомерЗаказа								="";
		
		
		Заявка = СсылкаНаОбъект.Услуги[0].Заявка;
		
		ЭтоПростой = Ложь;
		Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
			ЭтоПростой = Истина;
		КонецЕсли;
		
		
		ТекстВидаАкта = "СДАЧИ-ПРИЕМКИ РАБОТ (УСЛУГ)";
		
		Если ЭтоПростой И НЕ СсылкаНаОбъект.ДоговорКонтрагента.Комментарий = "брак" Тогда
			ТекстВидаАкта = "вынужденного простоя автотранспорта";
			//Если НастройкиПечати.Акт_ВыводитьДоговорСверху Тогда
				ТекстДог =  "по договору "+ СсылкаНаОбъект.ДоговорКонтрагента.Наименование;
			//КонецЕсли; 
		КонецЕсли; 
		
		Если ЭтоПростой И СсылкаНаОбъект.ДоговорКонтрагента.Комментарий = "брак" Тогда		
			Если НастройкиПечати.Акт_ВыводитьДоговорСверху Тогда
				ТекстДог =  "по договору "+ СсылкаНаОбъект.ДоговорКонтрагента.Наименование;
			КонецЕсли; 
		КонецЕсли; 
		
		Если ИННКонтрагента = ИННМВИДЕО и СсылкаНаОбъект.ДоговорКонтрагента.Комментарий = "брак" Тогда
			ТекстДог =  "по договору "+ СсылкаНаОбъект.ДоговорКонтрагента.Наименование;
		КонецЕсли;
		
		
		ОбластьМакета.Параметры.ТекстВидаАкта = ТекстВидаАкта;
		ОбластьМакета.Параметры.ТекстДог=ТекстДог;
		
		Если ИННКонтрагента = ИНННестле Тогда
			ОбластьМакета.Параметры.НазваниеУслуг="";
		КонецЕсли; 	
		
		Если ИННКонтрагента = ИННСетраЛубрикатс Тогда
			ОбластьМакета.Параметры.ЗаказчикВЛице="";
			ОбластьМакета.Параметры.Устава="доверенности";
		КонецЕсли;		

		ТабДок.Вывести(ОбластьМакета);	
		
		
		Если ИННКонтрагента = ИНННестле Тогда
			ОбластьШапкаНестле = Макет.ПолучитьОбласть("ШапкаНестле");		
			ОбластьШапкаНестле.Параметры.РО	= СсылкаНаОбъект.РО;		
			ОбластьШапкаНестле.Параметры.Проформа	= СсылкаНаОбъект.Проформа;		
			ТабДок.Вывести(ОбластьШапкаНестле);
		КонецЕсли; 	
		
		// заголовок
		Если ИННКонтрагента = ИННМВИДЕО Тогда		
			
			Если ЭтоПростой Тогда
				ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок_МВИДЕО_ПРОСТОЙ");
			Иначе	
				ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок_МВИДЕО");
			КонецЕсли;
			
		ИначеЕсли ИННКонтрагента = ИННКордиант Тогда						
			ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок_Кордиант");	
		Иначе	
			ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		КонецЕсли;	
		ТабДок.Вывести(ОбластьЗаголовок);
		
		
		
		ЕстьСтрокиСоСтавкойНДС=Ложь;
		
		////////////////////////////////////////////////////////////////////////////////////////////////	
		// табличная часть	
		ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		
		
		
		Отбор = Новый Структура;
		Отбор.Вставить("Ссылка",СсылкаНаОбъект);
		//
		Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);
		
		КолвоСтрок = Выборка.Количество();
		
		НадоПринудительноРазбивать=Ложь;
		Если (КолвоСтрок>9 И КолвоСтрок<14) И Филиал ="Новочебоксарск" Тогда	
			НадоПринудительноРазбивать=Истина;	
		КонецЕсли; 
		//
		Для Каждого Стр из Выборка Цикл
			
			Если ИННКонтрагента = ИННМПК Тогда
				ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");			
				
				ОбластьСтрока.Параметры.ТоварНаименование = "";			
				ТабДок.Вывести(ОбластьСтрока);		
				Продолжить;			
			КонецЕсли;
			
			Заявка 				= Стр.Заявка;
			Ном   				= Стр.НомерСтроки;
			
			ЭтоПростой = Ложь;
			Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
				ЭтоПростой = Истина;
				НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиПретензия();
				Заявка = Заявка.Заявка; //для простоя надо брать данные из док основания претензии
			КонецЕсли;
			
			Если Заявка.Пустая() Тогда
				ФИОВодителя 		= "";			
			Иначе
				ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
				ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
			КонецЕсли; 

			Сумма = Стр.Сумма;
			НДС   = Стр.СуммаНДС;
			Всего = Сумма+НДС;
			
			
			Если ИННКонтрагента = ИННМВИДЕО Тогда
				
				Если ЭтоПростой Тогда
					ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка_МВИДЕО_ПРОСТОЙ");
				Иначе	
					ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка_МВИДЕО");
				КонецЕсли;
				
				
				НомерТТН = яобщийМодуль.НайтиТТН(Заявка,9).ТекстТТН;			
				НомерТТН = СтрЗаменить(НомерТТН, ",  ", "");			
				НомерТТН = СтрЗаменить(НомерТТН, ",", "");
				
				ОбластьСтрока.Параметры.Ном = Ном;
				
				Если ЭтоПростой Тогда
					Если СсылкаНаОбъект.ДоговорКонтрагента.Комментарий = "брак" Тогда
						ОбластьСтрока.Параметры.Маршрут = Стр.Маршрут.Наименование;
						НомерТТН="";
					Иначе	
						ОбластьСтрока.Параметры.Маршрут = "ПРОСТОЙ ("+Стр.Маршрут.Наименование+ ") Поручение экспедитора № "+Заявка.ПоручениеЭкспедитора;
						НомерТТН="";
					КонецЕсли;
				Иначе	
					Если СсылкаНаОбъект.ДоговорКонтрагента.Комментарий = "брак" Тогда
						
						НомерТТН = яобщийМодуль.НайтиТТН(Заявка,7).ТекстТТН;						
							НомерТТН = СтрЗаменить(НомерТТН, ",  ", "");						
							НомерТТН = СтрЗаменить(НомерТТН, ",", "");
						
						Если Найти(Стр.Маршрут.Наименование, "доп.")>0 Тогда
							
													
							
							ОбластьСтрока.Параметры.Маршрут = "Транспортно-экспедиционные услуги по маршруту "+Стр.Маршрут.Наименование;
						Иначе
							ОбластьСтрока.Параметры.Маршрут = "Транспортно-экспедиционные услуги по маршруту "+Стр.Маршрут.Наименование+ ", "+Формат(Заявка.ВремяЗагрузки, "ДФ=dd.MM.yyyy");
						КонецЕсли;
					Иначе					
						ОбластьСтрока.Параметры.Маршрут = "Транспортно-экспедиционные услуги по маршруту "+Стр.Маршрут.Наименование+ ", "+Формат(Заявка.ВремяЗагрузки, "ДФ=dd.MM.yyyy")+" Поручение экспедитора № "+Заявка.ПоручениеЭкспедитора;										
					КонецЕсли;
				КонецЕсли;
				
				Если ПустаяСтрока(НомерТТН) Тогда
					НомерТТН = Стр.НомераТТН;
				КонецЕсли;
				
				ОбластьСтрока.Параметры.НомерТТН = НомерТТН;
				ОбластьСтрока.Параметры.НДС = НДС;
				ОбластьСтрока.Параметры.Всего = Всего;
				
				ТабДок.Вывести(ОбластьСтрока);		
				
				Продолжить;
			КонецЕсли;	
			
			Если Заявка.Пустая() Тогда
				НаименованиеТовара = Стр.ТоварНаименование;
			Иначе
				НаименованиеТовара = яОбщийМодуль.СформироватьСтрокуНаименованиеТовара(Стр, НастройкиПечати, "Акт", ЭтоПростой);
			КонецЕсли; 

			
			Если ИННКонтрагента = ИННФерреро Тогда			
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", "Транспортные услуги");					
			КонецЕсли; 	
			
			Если НЕ НазваниеУслугиКонтрагента="" Тогда		
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", НазваниеУслугиКонтрагента);					
			КонецЕсли; 	
			
			Если ИННКонтрагента = ИННСетраЛубрикатс Тогда
				Продолжить;
				//НаименованиеТовара = "Транспортно-экспедиционные услуги за период с  по  в соответствии с Реестром выполненных работ №  от по Договору на транспортно-экспедиционное обслуживание №TR-RUSGLB-17-01 от 04/09/17";
			КонецЕсли;		
	 	                             
			Если (ИННКонтрагента = ИННБалтика) И (Филиал ="Челябинск") Тогда		
				НазваниеУслугиВШапкеАкта = СтрЗаменить(НазваниеУслугиВШапкеАкта, "Услуги по перевозке грузов по дог. №", "Перевозка грузов по договору №");
			    НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Услуги по перевозке грузов", НазваниеУслугиВШапкеАкта);
			КонецЕсли;		
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			
			ОбластьСтрока.Параметры.ТоварНаименование = НаименованиеТовара;
			
			Если НДС=0 Тогда
				ОбластьСтрока.Параметры.НДС = "-----";
			Иначе
				ОбластьСтрока.Параметры.НДС = НДС;
			КонецЕсли; 
			
			ОбластьСтрока.Параметры.Всего = Сумма + НДС;
			
			ТабДок.Вывести(ОбластьСтрока);		
			
			
			Если НастройкиПечати.Акт_АвтоОтдельнойСтрокой Тогда
				
				ОбластьАвто 	= Макет.ПолучитьОбласть("Авто");
				
				Если Заявка.Пустая() Тогда
					Авто = "";
				Иначе
					ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
					Авто = Заявка.ПараметрыПеревозки[0].ТС.Наименование;
					Авто = "а/м-"+Авто;
				КонецЕсли; 
				
				
				Если НастройкиПечати.Счет_Прицеп Тогда				
					
					Если Заявка.Пустая() Тогда
						Прицеп = "";
					Иначе
						Прицеп = Заявка.ПараметрыПеревозки[0].Прицеп.Наименование;
					КонецЕсли; 
					
					Авто = Авто +  ?(СокрЛП(Прицеп)="" ,"",   " / "+Прицеп);				 
				КонецЕсли; 
				
				ОбластьАвто.Параметры.Авто 	= Авто;
				
				ТабДок.Вывести(Областьавто);
				
			КонецЕсли; 	
			
			Если НЕ Стр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
				ЕстьСтрокиСоСтавкойНДС=Истина;
				СтавкаНДСизСтроки = Стр.СтавкаНДС;
			КонецЕсли;
			
			Если НадоПринудительноРазбивать Тогда		
				Если Ном=9 Тогда			
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					НадоПринудительноРазбивать=Ложь;			
				КонецЕсли; 		
			КонецЕсли;		
			
		КонецЦикла;
		//
		//// итоги //////////////////
		ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");
		ИтСуммаНДС = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
		ИтВсего = ИтСумма+ИтСуммаНДС;	
		
		
		ЕстьНДС=НЕ СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		Если ИтСуммаНДС=0 И НЕ ЕстьСтрокиСоСтавкойНДС Тогда
			ЕстьНДС=Ложь;
		Иначе
			ЕстьНДС=Истина;
		КонецЕсли; 	
		
		Если ЕстьНДС Тогда
			ИтНДС   = ИтСуммаНДС;
			ИтВсего = ИтСумма+ИтСуммаНДС;	
		Иначе
			ИтНДС   = "-";
			ИтВсего = ИтСумма;
		КонецЕсли; 

		
		Если ИННКонтрагента = ИННСетраЛубрикатс Тогда
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");		
			
			НаименованиеТовара = "Транспортно-экспедиционные услуги за период с  по  в соответствии с Реестром выполненных работ №  от по Договору на транспортно-экспедиционное обслуживание №TR-RUSGLB-17-01 от 04/09/17";
			
			ОбластьСтрока.Параметры.ТоварНаименование = НаименованиеТовара;
			ОбластьСтрока.Параметры.НДС = ИтНДС;
			ОбластьСтрока.Параметры.Всего = ИтСумма + ИтНДС;
			
			
			ТабДок.Вывести(ОбластьСтрока);		

		КонецЕсли;		

		Если (ИННКонтрагента = ИННМВИДЕО) И ЭтоПростой Тогда
			ОбластьИтог	= Макет.ПолучитьОбласть("ИтогПростой");		
		Иначе
			ОбластьИтог	= Макет.ПолучитьОбласть("Итог");		
		КонецЕсли;
		
		ОбластьИтог.Параметры.ИтВсего 	= Формат(ИтВсего, "ЧДЦ=2");
		ТабДок.Вывести(ОбластьИтог);
		
		//
		// подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		
		Если НастройкиПечати.Акт_Реестр Тогда		
			ОбластьПодвал.Параметры.ТекстАктРеестр = "АКТ к Реестру "+ДанныеШапки.НомерДок+" от "+Формат(ДанныеШапки.ДатаДок, "ДЛФ=DD");
		Иначе
			ОбластьПодвал.Параметры.ТекстАктРеестр="";
		КонецЕсли; 
		
		Параметры = Новый Структура("Организация,Период,ОтветственноеЛицо",СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель); 	
		ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;
		
		//ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;	
		Если НЕ ЗначениеЗаполнено(ПодписьРуководителя) Тогда
			ПодписьРуководителя ="Черников И.Е.";
		КонецЕсли; 
		
		
		
		
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		ОбластьПодвал.Параметры.СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		
		ОбластьПодвал.Параметры.Организация 	=  СсылкаНаОбъект.Организация.НаименованиеПолное;
		ОбластьПодвал.Параметры.ПодписьРуководителя 	=  ПодписьРуководителя;
		
		
		Если ЕстьНДС Тогда
			СтавкаНДС = СтавкаНДСизСтроки;
		Иначе
			СтавкаНДС = "";
		КонецЕсли; 
		
		Если ЕстьНДС Тогда
			НадписьНДС	= " в т.ч.НДС ("+СтавкаНДС+"): "+ИтНДС+" руб.";		
		Иначе
			НадписьНДС	= "Без налога (НДС):";	
		КонецЕсли; 

		
		
		ОбластьПодвал.Параметры.ВТомЧисле 		= НадписьНДС; //ПолучитьСтрокуНДС(ВалютаДокумента,ИтНДС,СсылкаНаОбъект.КурсВзаиморасчетов);
		
		ОбластьПодвал.Параметры.НомерДок = Номер;
		
		ОбластьПодвал.Параметры.ДатаДокФ = Формат(ДанныеШапки.ДатаДок, "ДФ=dd.MM.yyyy");
		
		//харлов не будем выводить для стл
		Если СсылкаНаОбъект.Организация = СТЛ Тогда
			ДолжностьРуководителяКонтрагента ="";
			ЗаказчикВЛицеИм="                       ";
		КонецЕсли;
		
		ОбластьПодвал.Параметры.ДолжностьРуководителяКонтрагента=ДолжностьРуководителяКонтрагента;
		ОбластьПодвал.Параметры.ЗаказчикВЛицеИм=ЗаказчикВЛицеИм;	
		
		Если ИННКонтрагента = ИННСетраЛубрикатс Тогда
			ОбластьПодвал.Параметры.ДолжностьРуководителяКонтрагента="";
			ОбластьПодвал.Параметры.ЗаказчикВЛицеИм="";
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДок.АвтоМасштаб = Истина;
		
		ТабДок.ВерхнийКолонтитул.НачальнаяСтраница = 2;
		ТабДок.ВерхнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
		ТабДок.ВерхнийКолонтитул.ТекстСлева="Лист [&НомерСтраницы] сч/ф № "+Номер+" от "+Формат(ДанныеШапки.ДатаДок, "ДФ=dd.MM.yyyy");
		ТабДок.ВерхнийКолонтитул.Выводить = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабдДок_СТМ_Сервис(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет = ПолучитьМакет("АКТ_СТМ_Сервис");
		
		// ШАПКА
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		
		ОблШапка.Параметры.Номер	= СокрЛП(СсылкаНаОбъект.Номер); //Т0005072
		ОблШапка.Параметры.Дата		= Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy; ДЛФ=DD");	//21.12.2016
		
		
		СведенияОПоставщике =  	БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);
		СведенияОЗаказчике 	= 	БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Дата); 
		
		ОблШапка.Параметры.ПредставлениеПеревозчика = СтрШаблон(" %1 %2, ИНН %3",
			СведенияОПоставщике.ПолноеНаименование,
			СведенияОПоставщике.ЮридическийАдрес, 
			СведенияОПоставщике.ИНН);
			
		ОблШапка.Параметры.ПредставлениеЗаказчика = СтрШаблон(" %1 %2, ИНН %3",
			СведенияОЗаказчике.ПолноеНаименование,
			СведенияОЗаказчике.ЮридическийАдрес, 
			СведенияОЗаказчике.ИНН);
			
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект.ДоговорКонтрагента, "Номер, Дата");
		
		ОблШапка.Параметры.НомерДоговора = РеквизитыДоговора.Номер;
		ОблШапка.Параметры.ДатаДоговора = Формат(РеквизитыДоговора.Дата, "ДЛФ=DD");
		
		ТабДок.Вывести(ОблШапка);
		
		// ТЕЛО РЕЕСТРА
		ТаблицаДанных = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		Индекс =0;
		Для каждого СтрокаДанных Из ТаблицаДанных Цикл
			
			ОблСтрока =Макет.ПолучитьОбласть("СтрокаДанных");
			
			Заявка = СтрокаДанных.Заявка;
			ПараметрыПеревозки = Заявка.ПараметрыПеревозки[0];

			// костыль
			#Если Клиент И Сервер Тогда
			  Заявка = Документы.яЗаявкаПеревозчику.СоздатьДокумент();    	
			  ПараметрыПеревозки = Заявка.ПараметрыПеревозки[0];
			  Маршрут = Заявка.Маршрут[0];
		  	#КонецЕсли
			
			// описание услуги 
			ЭтоПростой = ЛОЖЬ;
			НаименованиеУслуги = яОбщийМодуль.СформироватьСтрокуНаименованиеТовара(СтрокаДанных, НастройкиПечати, "Акт", ЭтоПростой);		
			
			ОблСтрока.Параметры.НаименованиеУслуги = НаименованиеУслуги;
			
			ОблСтрока.Параметры.ЦенаБезНДС = СтрокаДанных.Всего - СтрокаДанных.СуммаНДС;
			ОблСтрока.Параметры.СтавкаНДС = Формат(Число(СтрЗаменить(Строка(СтрокаДанных.СтавкаНДС), "%", "")), "ЧДЦ=2");//20,00
			ОблСтрока.Параметры.СуммаНДС = СтрокаДанных.СуммаНДС;
			ОблСтрока.Параметры.СуммаСНДС = СтрокаДАнных.Всего;
			
			Индекс = Индекс + 1;	
			
			ТабДок.Вывести(ОблСтрока);
			
		КонецЦикла; 
		
		ОблПодвала = Макет.ПолучитьОбласть("Подвал");
		ОблПодвала.Параметры.Всего = ТаблицаДанных.Итог("Всего");;
		
		ТабДок.Вывести(ОблПодвала);
		
		Возврат ТабДок;
		
	КонецФункции
	
	Функция ПолучитьТабДок_Автодизель(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_Типовой"); 
		
		//////////////////////////////////////////
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ДанныеШапки = ПолучитьДанныеШапки(СсылкаНаОбъект);
		
		РуководительФилиала=РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		РуководительРП = РуководительФилиала.ФамилияИОРП;
		
		Ответственный=ДанныеШапки.ПодписьРук; //РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		Доверенность=РегистрыСведений.яДоверенностиПользователей.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Пользователь",Ответственный));
		
		НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		
		ДолжностьРуководителяКонтрагента="";ЗаказчикВЛицеИм="";ЗаказчикВЛицеРП="";Устава ="Устава";
		
		КонтактноеЛицо = Справочники.КонтактныеЛица.КонтактноеЛицоПоУмолчанию(СсылкаНаОбъект.Контрагент);
		
		Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			РеквизитыКонтактногоЛица = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			КонтактноеЛицо, "Фамилия, Имя, Отчество, Должность, ФамилияРП, ИмяРП, ОтчествоРП, ДействуетНаОсновании");
			
			РуководительКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(
			РеквизитыКонтактногоЛица.Фамилия, 
			РеквизитыКонтактногоЛица.Имя,
			РеквизитыКонтактногоЛица.Отчество,
			Ложь);
			ДолжностьРуководителяКонтрагента = РеквизитыКонтактногоЛица.Должность;
			ПредполагаемыйПол = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(СокрП(РуководительКонтрагента));
		КонецЕсли;
		
		ЗаказчикВЛицеИм = РуководительКонтрагента;
		Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			Если СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП)="" Тогда
				ЗаказчикВЛицеРП =ЗаказчикВЛицеИм;
			Иначе
				ЗаказчикВЛицеРП =СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП);
			КонецЕсли;
			ЗаказчикВЛицеРП = ДолжностьРуководителяКонтрагента + " " + ЗаказчикВЛицеРП;
			
			ЗаказчикВЛицеИм = ЗаказчикВЛицеИм;
			
			Если СокрЛП(РеквизитыКонтактногоЛица.ДействуетНаОсновании)="" Тогда
				Устава ="Устава";
			Иначе
				Устава =РеквизитыКонтактногоЛица.ДействуетНаОсновании;
			КонецЕсли; 
			
		КонецЕсли; 
		
		
		ТекстДог="";
		Если НастройкиПечати.Акт_ВыводитьДоговорСверху Тогда
			ТекстДог=ТекстДоговора(СсылкаНаОбъект);
		КонецЕсли; 
		
		Если СокрЛП(Ответственный.ФамилияИОРП)="" Тогда
			ФИО 		= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(Ответственный.Фамилия+" "+Ответственный.Имя+" "+Ответственный.Отчество);
		иначе
			ФИО 		= Ответственный.ФамилияИОРП;
		КонецЕсли; 
		
		Если СокрЛП(Ответственный.ДолжностьРП)="" Тогда
			Должность 		= "";
		иначе
			Должность 		= Ответственный.ДолжностьРП;
		КонецЕсли; 
		
		Если СокрЛП(Доверенность.Доверенность)="" Тогда
			НаОсновании="Устава";
		иначе
			НаОсновании="доверенности "+ Доверенность.Доверенность;
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
			ФИО 		= "Черникова И.Е.";	
			Должность 		= "Генерального директора";
			НаОсновании="Устава";
		КонецЕсли; 	
		
		НазваниеУслугиКонтрагента = ""; НазваниеУслугиВШапкеАкта="";
		ОтветственныйКонтрагента = Справочники.яРуководителиКонтрагента.ВернутьКонтактноеЛицо(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Филиал);	
		Если НЕ ОтветственныйКонтрагента.Пустая() Тогда
			ЗаказчикВЛицеРП = ОтветственныйКонтрагента.ДолжностьРП + " " +ОтветственныйКонтрагента.РукРодПадеж;
			Устава = ОтветственныйКонтрагента.Устав;
			ЗаказчикВЛицеИм = ОтветственныйКонтрагента.РукИмПадеж;
			ДолжностьРуководителяКонтрагента = ОтветственныйКонтрагента.ДолжностьИП;			
			
			НазваниеУслугиКонтрагента = ОтветственныйКонтрагента.НаименованиеУслуги;
			
			НазваниеУслугиВШапкеАкта = ОтветственныйКонтрагента.НазваниеУслугиВШапкеАкта;
			
		КонецЕсли; 	
		
		ОбластьМакета.Параметры.НомерДок = ДанныеШапки.НомерДок;
		
		СТЛ = Справочники.Организации.НайтиПоНаименованию("СТЛ ООО");
		Если СсылкаНаОбъект.Организация = СТЛ Тогда
			ЗаказчикВЛицеРП="";
		КонецЕсли;	
		
		ОбластьМакета.Параметры.ГородФилиала = ДанныеШапки.Филиал.ГородФилиала;
		ОбластьМакета.Параметры.ДатаДок	= Формат(ДанныеШапки.ДатаДок, "ДЛФ=DD");
		ОбластьМакета.Параметры.ПолнНаименование = ДанныеШапки.ПолнНаименование;
		ОбластьМакета.Параметры.ДолжностьВЛице=Должность;
		
		ОбластьМакета.Параметры.ПеревозчикВЛице=ФИО;
		ОбластьМакета.Параметры.НаОсновании =НаОсновании;
		ОбластьМакета.Параметры.КонтрагентНаименованиеПолное = ДанныеШапки.КонтрагентНаименованиеПолное;				
		ОбластьМакета.Параметры.ЗаказчикВЛице =ЗаказчикВЛицеРП;
		ОбластьМакета.Параметры.Устава				=Устава;
		
		Если НазваниеУслугиВШапкеАкта="" Тогда
			ОбластьМакета.Параметры.НазваниеУслуг = "Транспортное обслуживание по маршрутам:";
		Иначе
			ОбластьМакета.Параметры.НазваниеУслуг = НазваниеУслугиВШапкеАкта;
		КонецЕсли;	
		
		ОбластьМакета.Параметры.ТекстНомерЗаказа								="";
		
		
		Заявка 				= СсылкаНаОбъект.Услуги[0].Заявка;
		
		ЭтоПростой = Ложь;
		Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
			ЭтоПростой = Истина;
		КонецЕсли;
		
		
		ТекстВидаАкта = "СДАЧИ-ПРИЕМКИ РАБОТ (УСЛУГ)";
		
		Если ЭтоПростой Тогда
			ТекстВидаАкта = "вынужденного простоя автотранспорта";
			Если НастройкиПечати.Акт_ВыводитьДоговорСверху Тогда
				ТекстДог =  "по договору "+ СсылкаНаОбъект.ДоговорКонтрагента.Наименование;
			КонецЕсли; 
		КонецЕсли; 
		
		
		ОбластьМакета.Параметры.ТекстВидаАкта = ТекстВидаАкта;
		ОбластьМакета.Параметры.ТекстДог=ТекстДог;
		
		ТабДок.Вывести(ОбластьМакета);	
		

		// заголовок
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		////////////////////////////////////////////////////////////////////////////////////////////////	
		// табличная часть	
			ЭтоПростой = Ложь;
			
			ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");
			ИтНДС   = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
			ИтВсего = ИтСумма + ИтНДС;	
			
			Сумма = ИтСумма;
			НДС   = ИтНДС;
			Всего = ИтСумма+ИтНДС;
			
			НаименованиеТовара = "Транспортные услуги по договору №РГ15 от 01.04.2015";
			
			
			Если НЕ НазваниеУслугиКонтрагента="" Тогда		
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", НазваниеУслугиКонтрагента);					
			КонецЕсли; 	
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			
			ОбластьСтрока.Параметры.ТоварНаименование = НаименованиеТовара;
			
			Если НДС=0 Тогда
				ОбластьСтрока.Параметры.НДС = "-----";
			Иначе
				ОбластьСтрока.Параметры.НДС = НДС;
			КонецЕсли; 
			
			ОбластьСтрока.Параметры.Всего = Сумма + НДС;
			
			ТабДок.Вывести(ОбластьСтрока);		
			
		//
		//// итоги //////////////////
		    		
		ОбластьИтог	= Макет.ПолучитьОбласть("Итог");		
		
		ОбластьИтог.Параметры.ИтВсего 	= Формат(ИтВсего,"ЧДЦ=2") ;
		ТабДок.Вывести(ОбластьИтог);
		
		//
		// подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		
		Если НастройкиПечати.Акт_Реестр Тогда		
			ОбластьПодвал.Параметры.ТекстАктРеестр = "АКТ к Реестру "+ДанныеШапки.НомерДок+" от "+Формат(ДанныеШапки.ДатаДок, "ДЛФ=DD");
		Иначе
			ОбластьПодвал.Параметры.ТекстАктРеестр="";
		КонецЕсли; 
		
		Параметры = Новый Структура("Организация,Период,ОтветственноеЛицо",СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель); 	
		ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;
		
		//ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;	
		Если НЕ ЗначениеЗаполнено(ПодписьРуководителя) Тогда
			ПодписьРуководителя ="Черников И.Е.";
		КонецЕсли; 
		
		
		
		
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		ОбластьПодвал.Параметры.СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		
		ОбластьПодвал.Параметры.ПодписьРуководителя 	=  ПодписьРуководителя;
		
		ОбластьПодвал.Параметры.ВТомЧисле 		= ПолучитьСтрокуНДС(ВалютаДокумента,ИтНДС,СсылкаНаОбъект.КурсВзаиморасчетов);
		
		ОбластьПодвал.Параметры.НомерДок = ДанныеШапки.НомерДок;
		ОбластьПодвал.Параметры.ДатаДокФ = Формат(ДанныеШапки.ДатаДок, "ДФ=dd.MM.yyyy");
		
		ОбластьПодвал.Параметры.ДолжностьРуководителяКонтрагента=ДолжностьРуководителяКонтрагента;
		ОбластьПодвал.Параметры.ЗаказчикВЛицеИм=ЗаказчикВЛицеИм;
		
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабДок_ИННГрузовыеПеревозки(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_ГрузоПеревозки"); 
		
		СведенияОПоставщике       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);		
		СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент,  СсылкаНаОбъект.Дата);
		
		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Номер = СокрЛП(СсылкаНаОбъект.Номер);
		ОбластьМакетаШапка.Параметры.Дата = Формат(СсылкаНаОбъект.Дата, "ДЛФ=DD");		
		
		// костыль
		#Если Клиент И Сервер Тогда
		 	СсылкаНаОбъект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();    	
		#КонецЕсли  
	//	ОбластьМакетаШапка.Параметры.Заполнить(СведенияОПоставщике);		
		
		ОбластьМакетаШапка.Параметры.ПредставлениеИсполнителя =  СведенияОПоставщике.ПолноеНаименование;
		ОбластьМакетаШапка.Параметры.АдресИсполнителя =  СведенияОПоставщике.ФактическийАдрес;
		
		ОбластьМакетаШапка.Параметры.ПредставлениеЗаказчика =  СсылкаНаОбъект.Контрагент.ПолноеНаименование();
		ОбластьМакетаШапка.Параметры.АдресЗаказчика =  СведенияОГрузополучателе.ЮридическийАдрес;
		
		ТабДок.Вывести(ОбластьМакетаШапка);

		ЕстьСтрокиСоСтавкойНДС=Ложь;
		СтавкаНДСизСтроки = Перечисления.СтавкиНДС.БезНДС;
		
		НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		
		ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Ссылка",СсылкаНаОбъект);
		
		Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);

		Для Каждого Стр из Выборка Цикл
			Заявка 				= Стр.Заявка;
			Ном   				= Стр.НомерСтроки;
			
			ЭтоПростой = Ложь;
			Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
				ЭтоПростой = Истина;
				НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиПретензия();
				Заявка = Заявка.Заявка; //для простоя надо брать данные из док основания претензии
			КонецЕсли;
					
			ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
			
			Цена = Стр.Сумма;
			Сумма = Стр.Сумма;
			НДС   = Стр.СуммаНДС;
			Всего = Сумма+НДС;
			
			//НаименованиеТовара = яОбщийМодуль.СформироватьСтрокуНаименованиеТовара(Стр, НастройкиПечати, "Акт", ЭтоПростой);		
			
			//НаименованиеТовара = НаименованиеТовара;
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			
				ЕдИзм = "шт";
				Колво = "1";
			
			ОбластьСтрока.Параметры.Ном 	= Ном;
			//ОбластьСтрока.Параметры.Маршрут = НаименованиеТовара;
			
			//ОбластьСтрока.Параметры.ЕдИзм 	= ЕдИзм;
			//ОбластьСтрока.Параметры.Колво 	= Колво;

			//ОбластьСтрока.Параметры.Цена 	= Цена;
			ОбластьСтрока.Параметры.Сумма 	= Сумма;
			ТабДок.Вывести(ОбластьСтрока);
			
			Если НЕ Стр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
				ЕстьСтрокиСоСтавкойНДС=Истина;
				СтавкаНДСизСтроки = Стр.СтавкаНДС;
			КонецЕсли;
			
		КонецЦикла;	 
		
		//СтавкаНДСЧисло = яОбщийМодуль.ПолучитьСтавкуНДС(СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС);
		
		ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");	
		ИтСуммаНДС = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
		
		ЕстьНДС=НЕ СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		Если ИтСуммаНДС=0 И НЕ ЕстьСтрокиСоСтавкойНДС Тогда
			ЕстьНДС=Ложь;
		Иначе
			ЕстьНДС=Истина;
		КонецЕсли; 	
		
		Если ЕстьНДС Тогда
			ИтНДС   = ИтСуммаНДС;
			ИтВсего = ИтСумма+ИтСуммаНДС;	
		Иначе
			ИтНДС   = "-";
			ИтВсего = ИтСумма;
		КонецЕсли; 
		
		ОбластьИтоги 	= Макет.ПолучитьОбласть("Итоги");	
		
		Если ЕстьНДС Тогда
			СтавкаНДС = СтавкаНДСизСтроки;
		Иначе
			СтавкаНДС = "";
		КонецЕсли; 
		
		ОбластьИтоги.Параметры.ИтСумма	= ИтСумма;
		ОбластьИтоги.Параметры.ИтНДС	= ИтНДС;
		ОбластьИтоги.Параметры.ИтВсего 	= Формат(ИтСумма+ ИтНДС, "ЧДЦ=2");
		
		ТабДок.Вывести(ОбластьИтоги);	
		
		////////// определить подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		
		КоличествоСтрок = СсылкаНаОбъект.Услуги.Количество();
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		
		СуммаПрописьюНДС 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтНДС, ВалютаДокумента);	
		
		ОбластьПодвал.Параметры.КолСтрок = КоличествоСтрок;	
		ОбластьПодвал.Параметры.ИтНДС	= ИтНДС;
		ОбластьПодвал.Параметры.ИтВсего = Формат(ИтСумма+ ИтНДС, "ЧДЦ=2");

		ОбластьПодвал.Параметры.СуммаПрописью = СуммаПрописью;
		

		ОбластьПодвал.Параметры.ПодписьРуководителя ="Латушко С.Н.";
		
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
		ТабДок.Вывод=ИспользованиеВывода.Разрешить;
		
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабДок_Бунге(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_Бунге"); 
			
		СведенияОПоставщике       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);		
		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Номер = СокрЛП(СсылкаНаОбъект.Номер);
		ОбластьМакетаШапка.Параметры.Дата = Формат(СсылкаНаОбъект.Дата, "ДЛФ=DD");		
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента) Тогда
			ОбластьМакетаШапка.Параметры.Договор = СсылкаНаОбъект.ДоговорКонтрагента.Наименование;
		КонецЕсли; 
		
		ОбластьМакетаШапка.Параметры.Заполнить(СведенияОПоставщике);		
		ТабДок.Вывести(ОбластьМакетаШапка);

		ЕстьСтрокиСоСтавкойНДС=Ложь;
		СтавкаНДСизСтроки = Перечисления.СтавкиНДС.БезНДС;
		
		НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		
		ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Ссылка",СсылкаНаОбъект);
		
		Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);

		Для Каждого Стр из Выборка Цикл
			Заявка 				= Стр.Заявка;
			Ном   				= Стр.НомерСтроки;
			
			ЭтоПростой = Ложь;
			Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
				ЭтоПростой = Истина;
				НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиПретензия();
				Заявка = Заявка.Заявка; //для простоя надо брать данные из док основания претензии
			КонецЕсли;
					
			ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
			
			Цена = Стр.Сумма;
			Сумма = Стр.Сумма;
			НДС   = Стр.СуммаНДС;
			Всего = Сумма+НДС;
			
			НаименованиеТовара = яОбщийМодуль.СформироватьСтрокуНаименованиеТовара(Стр, НастройкиПечати, "Акт", ЭтоПростой);		
			
			НаименованиеТовара = НаименованиеТовара;
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			
				ЕдИзм = "шт";
				Колво = "1";
			
			ОбластьСтрока.Параметры.Ном 	= Ном;
			ОбластьСтрока.Параметры.Маршрут = НаименованиеТовара;
			
			ОбластьСтрока.Параметры.ЕдИзм 	= ЕдИзм;
			ОбластьСтрока.Параметры.Колво 	= Колво;

			ОбластьСтрока.Параметры.Цена 	= Цена;
			ОбластьСтрока.Параметры.Сумма 	= Сумма;
			ТабДок.Вывести(ОбластьСтрока);
			
			Если НЕ Стр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
				ЕстьСтрокиСоСтавкойНДС=Истина;
				СтавкаНДСизСтроки = Стр.СтавкаНДС;
			КонецЕсли;
			
		КонецЦикла;	 
		
		//СтавкаНДСЧисло = яОбщийМодуль.ПолучитьСтавкуНДС(СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС);
		
		ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");	
		ИтСуммаНДС = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
		
		ЕстьНДС=НЕ СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		Если ИтСуммаНДС=0 И НЕ ЕстьСтрокиСоСтавкойНДС Тогда
			ЕстьНДС=Ложь;
		Иначе
			ЕстьНДС=Истина;
		КонецЕсли; 	
		
		Если ЕстьНДС Тогда
			ИтНДС   = ИтСуммаНДС;
			ИтВсего = ИтСумма+ИтСуммаНДС;	
		Иначе
			ИтНДС   = "-";
			ИтВсего = ИтСумма;
		КонецЕсли; 
		
		ОбластьИтоги 	= Макет.ПолучитьОбласть("Итоги");	
		
		Если ЕстьНДС Тогда
			СтавкаНДС = СтавкаНДСизСтроки;
		Иначе
			СтавкаНДС = "";
		КонецЕсли; 
		
		ОбластьИтоги.Параметры.ИтСумма	= ИтСумма;
		ОбластьИтоги.Параметры.ИтНДС	= ИтНДС;
	//	ОбластьИтоги.Параметры.ИтВсего 	= ИтВсего;
		
		ТабДок.Вывести(ОбластьИтоги);	
		
		////////// определить подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		
		КоличествоСтрок = СсылкаНаОбъект.Услуги.Количество();
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		
		СуммаПрописьюНДС 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтНДС, ВалютаДокумента);
		
		
		ОбластьПодвал.Параметры.СуммаПрописью = СуммаПрописью;
		

		ОбластьПодвал.Параметры.ПодписьРуководителя ="Черников И.Е.";
		
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
		ТабДок.Вывод=ИспользованиеВывода.Разрешить;
		
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабДок_Спортмастер(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_Спортмастер"); 
			
		СведенияОПоставщике       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);		
		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Номер = СокрЛП(СсылкаНаОбъект.Номер);
		ОбластьМакетаШапка.Параметры.Дата = Формат(СсылкаНаОбъект.Дата, "ДЛФ=DD");		
		ОбластьМакетаШапка.Параметры.Заполнить(СведенияОПоставщике);		
		ТабДок.Вывести(ОбластьМакетаШапка);

		ЕстьСтрокиСоСтавкойНДС=Ложь;
		СтавкаНДСизСтроки = Перечисления.СтавкиНДС.БезНДС;
		
		НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		
		ДополнениеМосквы= "";
		Если СсылкаНаОбъект.Филиал.Наименование ="Москва" Тогда
			НастройкиПечати.Вставить("Акт_ТТН", ложь);		
			ДополнениеМосквы= " по дог № СМ/Русглобал-авто-мг2011 от 19.12.2011г., предоставленные за период от "+ Формат(СсылкаНаОбъект.Дата-9*24*60*60, "ДЛФ=Д")+" по "+Формат(СсылкаНаОбъект.Дата, "ДЛФ=Д")+" (реестр № "+СсылкаНаОбъект.Номер+" от "+Формат(СсылкаНаОбъект.Дата, "ДЛФ=Д")+")"
		КонецЕсли;
		
		ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Ссылка",СсылкаНаОбъект);
		
		Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);

		Для Каждого Стр из Выборка Цикл
			Заявка 				= Стр.Заявка;
			Ном   				= Стр.НомерСтроки;
			
			ЭтоПростой = Ложь;
			Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
				ЭтоПростой = Истина;
				НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиПретензия();
				Заявка = Заявка.Заявка; //для простоя надо брать данные из док основания претензии
			КонецЕсли;
					
			ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
			
			Цена = Стр.Сумма;
			Сумма = Стр.Сумма;
			НДС   = Стр.СуммаНДС;
			Всего = Сумма+НДС;
			
			НаименованиеТовара = яОбщийМодуль.СформироватьСтрокуНаименованиеТовара(Стр, НастройкиПечати, "Акт", ЭтоПростой);		
			
			НаименованиеТовара = НаименованиеТовара + ДополнениеМосквы;
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			
				ЕдИзм = "шт";
				Колво = "1";
			
			ОбластьСтрока.Параметры.Ном 	= Ном;
			ОбластьСтрока.Параметры.Маршрут = НаименованиеТовара;
			
			ОбластьСтрока.Параметры.ЕдИзм 	= ЕдИзм;
			ОбластьСтрока.Параметры.Колво 	= Колво;

			ОбластьСтрока.Параметры.Цена 	= Цена;
			ОбластьСтрока.Параметры.Сумма 	= Сумма;
			ТабДок.Вывести(ОбластьСтрока);
			
			Если НЕ Стр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
				ЕстьСтрокиСоСтавкойНДС=Истина;
				СтавкаНДСизСтроки = Стр.СтавкаНДС;
			КонецЕсли;
			
		КонецЦикла;	 
		
		//СтавкаНДСЧисло = яОбщийМодуль.ПолучитьСтавкуНДС(СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС);
		
		ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");	
		ИтСуммаНДС = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
		
		ЕстьНДС=НЕ СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		Если ИтСуммаНДС=0 И НЕ ЕстьСтрокиСоСтавкойНДС Тогда
			ЕстьНДС=Ложь;
		Иначе
			ЕстьНДС=Истина;
		КонецЕсли; 	
		
		Если ЕстьНДС Тогда
			ИтНДС   = ИтСуммаНДС;
			ИтВсего = ИтСумма+ИтСуммаНДС;	
		Иначе
			ИтНДС   = "-";
			ИтВсего = ИтСумма;
		КонецЕсли; 
		
		ОбластьИтоги 	= Макет.ПолучитьОбласть("Итоги");	
		
		Если ЕстьНДС Тогда
			СтавкаНДС = СтавкаНДСизСтроки;
		Иначе
			СтавкаНДС = "";
		КонецЕсли; 
		
		Если ЕстьНДС Тогда
			ОбластьИтоги.Параметры.НадписьНДС	= "Итого НДС ("+СтавкаНДС+"):";		
		Иначе
			ОбластьИтоги.Параметры.НадписьНДС	= "Без налога (НДС):";	
		КонецЕсли; 

		ОбластьИтоги.Параметры.ИтСумма	= ИтСумма;
		ОбластьИтоги.Параметры.ИтНДС	= ИтНДС;
		ОбластьИтоги.Параметры.ИтВсего 	= Формат(ИтВсего, "ЧДЦ=2");
		
		ТабДок.Вывести(ОбластьИтоги);	
		
		////////// определить подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		
		КоличествоСтрок = СсылкаНаОбъект.Услуги.Количество();
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		
		СуммаПрописьюНДС 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтНДС, ВалютаДокумента);
		
	//	ОбластьПодвал.Параметры.КоличествоСтрок = КоличествоСтрок;
	//	ОбластьПодвал.Параметры.ИтНДС	= Формат(ИтНДС,"ЧДЦ=2; ЧРД=.");
	//	ОбластьПодвал.Параметры.ИтВсего 		= Формат(ИтВсего,"ЧДЦ=2; ЧРД=.");
		
		Если ЕстьНДС Тогда                                                       
			ОбластьПодвал.Параметры.ДополнениеНДС	= ", в т.ч. НДС "+СтавкаНДС+" " +СуммаПрописьюНДС;
		Иначе
			ОбластьПодвал.Параметры.ДополнениеНДС = ", без НДС.";
		КонецЕсли; 
		
		ОбластьПодвал.Параметры.СуммаПрописью = СуммаПрописью;
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация);
		Если ТипЗнч(СведенияОбОрганизации.РуководительФИО) = Тип("Структура") Тогда
			ОбластьПодвал.Параметры.ПодписьРуководителя = СведенияОбОрганизации.РуководительФИО.Представление;
		Иначе
			ОбластьПодвал.Параметры.ПодписьРуководителя = "";
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
		ТабДок.Вывод=ИспользованиеВывода.Разрешить;
		
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабДок_МПК(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_Типовой"); 
		
		//////////////////////////////////////////
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ДанныеШапки = ПолучитьДанныеШапки(СсылкаНаОбъект);
		
		РуководительФилиала=РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		РуководительРП = РуководительФилиала.ФамилияИОРП;
		
		Ответственный=ДанныеШапки.ПодписьРук; //РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		Доверенность=РегистрыСведений.яДоверенностиПользователей.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Пользователь",Ответственный));
		
		НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		
		ДолжностьРуководителяКонтрагента="";ЗаказчикВЛицеИм="";ЗаказчикВЛицеРП="";Устава ="Устава";
		
		КонтактноеЛицо = Справочники.КонтактныеЛица.КонтактноеЛицоПоУмолчанию(СсылкаНаОбъект.Контрагент);
		
		Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			РеквизитыКонтактногоЛица = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			КонтактноеЛицо, "Фамилия, Имя, Отчество, Должность, ФамилияРП, ИмяРП, ОтчествоРП, ДействуетНаОсновании");
			
			РуководительКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(
			РеквизитыКонтактногоЛица.Фамилия, 
			РеквизитыКонтактногоЛица.Имя,
			РеквизитыКонтактногоЛица.Отчество,
			Ложь);
			ДолжностьРуководителяКонтрагента = РеквизитыКонтактногоЛица.Должность;
			ПредполагаемыйПол = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(СокрП(РуководительКонтрагента));
		КонецЕсли;
		
		ЗаказчикВЛицеИм = РуководительКонтрагента;
		Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			Если СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП)="" Тогда
				ЗаказчикВЛицеРП =ЗаказчикВЛицеИм;
			Иначе
				ЗаказчикВЛицеРП =СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП);
			КонецЕсли;
			ЗаказчикВЛицеРП = ДолжностьРуководителяКонтрагента + " " + ЗаказчикВЛицеРП;
			
			ЗаказчикВЛицеИм = ЗаказчикВЛицеИм;
			
			Если СокрЛП(РеквизитыКонтактногоЛица.ДействуетНаОсновании)="" Тогда
				Устава ="Устава";
			Иначе
				Устава =РеквизитыКонтактногоЛица.ДействуетНаОсновании;
			КонецЕсли; 
			
		КонецЕсли; 
		
		
		ТекстДог="";
		Если НастройкиПечати.Акт_ВыводитьДоговорСверху Тогда
			ТекстДог=ТекстДоговора(СсылкаНаОбъект);
		КонецЕсли; 
		
		Если СокрЛП(Ответственный.ФамилияИОРП)="" Тогда
			ФИО 		= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(Ответственный.Фамилия+" "+Ответственный.Имя+" "+Ответственный.Отчество);
		иначе
			ФИО 		= Ответственный.ФамилияИОРП;
		КонецЕсли; 
		
		Если СокрЛП(Ответственный.ДолжностьРП)="" Тогда
			Должность 		= "";
		иначе
			Должность 		= Ответственный.ДолжностьРП;
		КонецЕсли; 
		
		Если СокрЛП(Доверенность.Доверенность)="" Тогда
			НаОсновании="Устава";
		иначе
			НаОсновании="доверенности "+ Доверенность.Доверенность;
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
			ФИО 		= "Черникова И.Е.";	
			Должность 		= "Генерального директора";
			НаОсновании="Устава";
		КонецЕсли; 	
		
		НазваниеУслугиКонтрагента = ""; НазваниеУслугиВШапкеАкта="";
		ОтветственныйКонтрагента = Справочники.яРуководителиКонтрагента.ВернутьКонтактноеЛицо(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Филиал);	
		Если НЕ ОтветственныйКонтрагента.Пустая() Тогда
			ЗаказчикВЛицеРП = ОтветственныйКонтрагента.ДолжностьРП + " " +ОтветственныйКонтрагента.РукРодПадеж;
			Устава = ОтветственныйКонтрагента.Устав;
			ЗаказчикВЛицеИм = ОтветственныйКонтрагента.РукИмПадеж;
			ДолжностьРуководителяКонтрагента = ОтветственныйКонтрагента.ДолжностьИП;			
			
			НазваниеУслугиКонтрагента = ОтветственныйКонтрагента.НаименованиеУслуги;
			
			НазваниеУслугиВШапкеАкта = ОтветственныйКонтрагента.НазваниеУслугиВШапкеАкта;
			
		КонецЕсли; 	
		
		ОбластьМакета.Параметры.НомерДок = ДанныеШапки.НомерДок;
		
		СТЛ = Справочники.Организации.НайтиПоНаименованию("СТЛ ООО");
		Если СсылкаНаОбъект.Организация = СТЛ Тогда
			ЗаказчикВЛицеРП="";
		КонецЕсли;	
		
		ОбластьМакета.Параметры.ГородФилиала = ДанныеШапки.Филиал.ГородФилиала;
		ОбластьМакета.Параметры.ДатаДок	= Формат(ДанныеШапки.ДатаДок, "ДЛФ=DD");
		ОбластьМакета.Параметры.ПолнНаименование = ДанныеШапки.ПолнНаименование;
		ОбластьМакета.Параметры.ДолжностьВЛице=Должность;
		
		ОбластьМакета.Параметры.ПеревозчикВЛице=ФИО;
		ОбластьМакета.Параметры.НаОсновании =НаОсновании;
		ОбластьМакета.Параметры.КонтрагентНаименованиеПолное = ДанныеШапки.КонтрагентНаименованиеПолное;				
		ОбластьМакета.Параметры.ЗаказчикВЛице =ЗаказчикВЛицеРП;
		ОбластьМакета.Параметры.Устава				=Устава;
		
		Если НазваниеУслугиВШапкеАкта="" Тогда
			ОбластьМакета.Параметры.НазваниеУслуг = "Транспортное обслуживание по маршрутам:";
		Иначе
			ОбластьМакета.Параметры.НазваниеУслуг = НазваниеУслугиВШапкеАкта;
		КонецЕсли;	
		
		ОбластьМакета.Параметры.ТекстНомерЗаказа								="";
		
		
		Заявка 				= СсылкаНаОбъект.Услуги[0].Заявка;
		
		ЭтоПростой = Ложь;
		Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
			ЭтоПростой = Истина;
		КонецЕсли;
		
		
		ТекстВидаАкта = "СДАЧИ-ПРИЕМКИ РАБОТ (УСЛУГ)";
		
		Если ЭтоПростой Тогда
			ТекстВидаАкта = "вынужденного простоя автотранспорта";
			Если НастройкиПечати.Акт_ВыводитьДоговорСверху Тогда
				ТекстДог =  "по договору "+ СсылкаНаОбъект.ДоговорКонтрагента.Наименование;
			КонецЕсли; 
		КонецЕсли; 
		
		
		ОбластьМакета.Параметры.ТекстВидаАкта = ТекстВидаАкта;
		ОбластьМакета.Параметры.ТекстДог=ТекстДог;
		
		ТабДок.Вывести(ОбластьМакета);	
		

		// заголовок
		ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		////////////////////////////////////////////////////////////////////////////////////////////////	
		// табличная часть	
			ЭтоПростой = Ложь;
			
			ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");
			ИтНДС   = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
			ИтВсего = ИтСумма + ИтНДС;	
			
			Сумма = ИтСумма;
			НДС   = ИтНДС;
			Всего = ИтСумма+ИтНДС;
			
			НаименованиеТовара = "Транспортные услуги по договору №ТО-317/14 от 01.10.14 на основании реестра "+СокрЛП(СсылкаНаОбъект.Номер) + " от " + Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");
			
			
			Если НЕ НазваниеУслугиКонтрагента="" Тогда		
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", НазваниеУслугиКонтрагента);					
			КонецЕсли; 	
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			
			ОбластьСтрока.Параметры.ТоварНаименование = НаименованиеТовара;
			
			Если НДС=0 Тогда
				ОбластьСтрока.Параметры.НДС = "-----";
			Иначе
				ОбластьСтрока.Параметры.НДС = НДС;
			КонецЕсли; 
			
			ОбластьСтрока.Параметры.Всего = Сумма + НДС;
			
			ТабДок.Вывести(ОбластьСтрока);		
			
		//
		//// итоги //////////////////
		    		
		ОбластьИтог	= Макет.ПолучитьОбласть("Итог");		
		
		ОбластьИтог.Параметры.ИтВсего 	= Формат(ИтВсего, "ЧДЦ=2");
		ТабДок.Вывести(ОбластьИтог);
		
		//
		// подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		
		Если НастройкиПечати.Акт_Реестр Тогда		
			ОбластьПодвал.Параметры.ТекстАктРеестр = "АКТ к Реестру "+ДанныеШапки.НомерДок+" от "+Формат(ДанныеШапки.ДатаДок, "ДЛФ=DD");
		Иначе
			ОбластьПодвал.Параметры.ТекстАктРеестр="";
		КонецЕсли; 
		
		Параметры = Новый Структура("Организация,Период,ОтветственноеЛицо",СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель); 	
		ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;
		
		//ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;	
		Если НЕ ЗначениеЗаполнено(ПодписьРуководителя) Тогда
			ПодписьРуководителя ="Черников И.Е.";
		КонецЕсли; 
		
		
		
		
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		ОбластьПодвал.Параметры.СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		
		ОбластьПодвал.Параметры.ПодписьРуководителя 	=  ПодписьРуководителя;
		
		ОбластьПодвал.Параметры.ВТомЧисле 		= ПолучитьСтрокуНДС(ВалютаДокумента,ИтНДС,СсылкаНаОбъект.КурсВзаиморасчетов);
		
		ОбластьПодвал.Параметры.НомерДок = ДанныеШапки.НомерДок;
		ОбластьПодвал.Параметры.ДатаДокФ = Формат(ДанныеШапки.ДатаДок, "ДФ=dd.MM.yyyy");
		
		ОбластьПодвал.Параметры.ДолжностьРуководителяКонтрагента=ДолжностьРуководителяКонтрагента;
		ОбластьПодвал.Параметры.ЗаказчикВЛицеИм=ЗаказчикВЛицеИм;
		
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабДок_КокаКола(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("Акт_КокаКола");   
		
		ОбластьШапка   			= Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока  			= Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал	  		= Макет.ПолучитьОбласть("Подвал");
		
		Запрос = новый запрос;
		Запрос.УстановитьПараметр("МассивОбъектов",СсылкаНаОбъект);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	РеализацияТоваровУслугУслуги.Номенклатура КАК Номенклатура,
		               |	РеализацияТоваровУслугУслуги.Сумма КАК Сумма,
		               |	РеализацияТоваровУслугУслуги.Количество КАК Количество,
		               |	РеализацияТоваровУслугУслуги.Цена КАК Цена,
		               |	РеализацияТоваровУслугУслуги.Ссылка КАК Ссылка,
		               |	РеализацияТоваровУслугУслуги.Маршрут КАК Маршрут,
		               |	РеализацияТоваровУслугУслуги.Заявка КАК Заявка,
		               |	РеализацияТоваровУслугУслуги.СуммаНДС КАК СуммаНДС,
		               |	РеализацияТоваровУслугУслуги.СуммаНДС + РеализацияТоваровУслугУслуги.Сумма КАК Всего
		               |ИЗ
		               |	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		               |ГДЕ
		               |	РеализацияТоваровУслугУслуги.Ссылка В(&МассивОбъектов)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Ссылка";
		
		ОбщаяВыборка = Запрос.Выполнить().Выгрузить();
		
		
		 ДанныеШапки = ПолучитьДанныеШапки(СсылкаНаОбъект);
			РуководительФилиала=РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		РуководительРП = РуководительФилиала.ФамилияИОРП;
		
		Ответственный=ДанныеШапки.ПодписьРук; //РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		Доверенность=РегистрыСведений.яДоверенностиПользователей.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Пользователь",Ответственный));
		
		НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		
		КонтактноеЛицо = Справочники.КонтактныеЛица.КонтактноеЛицоПоУмолчанию(СсылкаНаОбъект.Контрагент);
		
		ДолжностьРуководителяКонтрагента="";ЗаказчикВЛицеИм="";ЗаказчикВЛицеРП="";Устава ="Устава";

		
		Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			РеквизитыКонтактногоЛица = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			КонтактноеЛицо, "Фамилия, Имя, Отчество, Должность, ФамилияРП, ИмяРП, ОтчествоРП, ДействуетНаОсновании");
			
			РуководительКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(
			РеквизитыКонтактногоЛица.Фамилия, 
			РеквизитыКонтактногоЛица.Имя,
			РеквизитыКонтактногоЛица.Отчество,
			Ложь);
			ДолжностьРуководителяКонтрагента = РеквизитыКонтактногоЛица.Должность;
			ПредполагаемыйПол = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(СокрП(РуководительКонтрагента));
		КонецЕсли;
		
		
		
		ЗаказчикВЛицеИм = РуководительКонтрагента;
		Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
			Если СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП)="" Тогда
				ЗаказчикВЛицеРП =ЗаказчикВЛицеИм;
			Иначе
				ЗаказчикВЛицеРП =СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП);
			КонецЕсли;
			
			
		ЗаказчикВЛицеИм = ДолжностьРуководителяКонтрагента + " " + ЗаказчикВЛицеИм;
			
		Если СокрЛП(РеквизитыКонтактногоЛица.ДействуетНаОсновании)="" Тогда
			Устава ="Устава";
		Иначе
			Устава =РеквизитыКонтактногоЛица.ДействуетНаОсновании;
		КонецЕсли; 

		КонецЕсли; 

		////////////////////////////////////////////////////////////////////////////////////////////////	
		
		
		ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры,СсылкаНаОбъект);
		ОбластьШапка.Параметры.ДатаДок   = Формат(СсылкаНаОбъект.Дата, "ДФ=dd.MM.yyyy");	
		ОбластьШапка.Параметры.НомерДок = СокрЛП(СсылкаНаОбъект.Номер);
		
		ОбластьШапка.Параметры.НаОсновании = Доверенность.Доверенность;
		ОбластьШапка.Параметры.Ответственный = РуководительФилиала.ФамилияИОРП;
		
		
		ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");
		ИтНДС   = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
		ИтВсего = ИтСумма + ИтНДС;	
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		ОбластьШапка.Параметры.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);

		ОбластьШапка.Параметры.Сумма = Формат(ИтВсего, "ЧДЦ=2");
		ОбластьШапка.Параметры.СуммаНДС = Формат(ИтНДС, "ЧДЦ=2");
		
		ТабДок.Вывести(ОбластьШапка);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Ссылка",СсылкаНаОбъект);
		
		Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);
		
		ИтогоСумма = 0;
		ИтогоНДС   = 0;  
		ИтогоВего  = 0;
		
		к=1;
		Для Каждого Стр из Выборка Цикл
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Стр);
			
			ОбластьСтрока.Параметры.Ном	= к; к=к+1;
			
			ДокументОснование 	= Стр.Заявка;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	яТТН.Номер  КАК НомерТТН
			|ИЗ
			|	Документ.яТТН КАК яТТН
			|ГДЕ
			|	яТТН.Заявка = &Заявка";
			
			Запрос.УстановитьПараметр("Заявка", ДокументОснование);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			НомерТТН = "";
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Если НомерТТН <> "" Тогда			
					НомерТТН = НомерТТН+Символы.ПС;				
				КонецЕсли; 
				
				НомерТТН = НомерТТН + ВыборкаДетальныеЗаписи.НомерТТН;
				//Прервать;
			КонецЦикла;
			
			ПараметрыПеревозки 	= ДокументОснование.ПараметрыПеревозки[0];
			ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
			
			ОбластьСтрока.Параметры.ФИОВодителя  = ФИОВодителя;
			ОбластьСтрока.Параметры.НомерМашины  = СокрЛП(ПараметрыПеревозки.ТС)+" "+СокрЛП(ПараметрыПеревозки.Прицеп);
			
	//		ОбластьСтрока.Параметры.НомерЗаказа	 = ДокументОснование.Номер;	
			
			ОбластьСтрока.Параметры.ДатаЗагрузки	 = Формат(ДокументОснование.ВремяЗагрузки, "ДФ=dd.MM.yyyy");
			ОбластьСтрока.Параметры.ДатаВыгрузки = Формат(ДокументОснование.ДатаРазгрузкиКон, "ДФ=dd.MM.yyyy");
			ОбластьСтрока.Параметры.НомерТТН     = НомерТТН;   	
			
			
			ОбластьСтрока.Параметры.Сумма	= Формат(Стр.Сумма, "ЧДЦ=2");
			//ОбластьСтрока.Параметры.Всего	= Формат(Стр.Всего, "ЧДЦ=2");
			
			ИтогоНДС   = ИтогоНДС   + Стр.СуммаНДС;
			ИтогоСумма = ИтогоСумма + Стр.Сумма;
			ИтогоВего  = ИтогоВего  + Стр.Всего; 
			
			ТабДок.Вывести(ОбластьСтрока);
		КонецЦикла;
		
	//	ОбластьПодвал.Параметры.ИтогНДС       = ИтогоНДС   ;
		ОбластьПодвал.Параметры.ИтогСуммаБНДС = Формат(ИтогоСумма, "ЧДЦ=2");
		ОбластьПодвал.Параметры.ИтогВсего     = Формат(ИтогоВего, "ЧДЦ=2");
		
		
		
	//	ОбластьПодвал.Параметры.ПодписьГлБух  			= СсылкаНаОбъект.ПодписьГлБ;
	//	ОбластьПодвал.Параметры.ЮрЛицоНаименование 		= СокрЛП(СсылкаНаОбъект.Организация.НаименованиеПолное);
	//	ОбластьПодвал.Параметры.КонтрагентНаименование 	= СокрЛП(СсылкаНаОбъект.Контрагент.НаименованиеПолное);
		
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабДок_Полипластик(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_Полипластик"); 
		
		//////////////////////////////////////////
		
		ФилиалАкта = СсылкаНаОбъект.Филиал.Наименование;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");	
		
		ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		ИзКазани=Ложь;
		Для каждого СтрокаЗаявка Из ОбщаяВыборка Цикл
			Если СтрНайти(СтрокаЗаявка.Маршрут.Наименование, "Казань")>0 Тогда
				Если Лев(СтрокаЗаявка.Маршрут.Наименование, 6)="Казань" Тогда
					ИзКазани=Истина;
					Прервать;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
		Если ФилиалАкта = "Новочебоксарск" Тогда
			
			Если ИзКазани Тогда
				Подписант  ="Шурликовой О.И., действующей на основании доверенности №63 от 22.05.2017 г.";	
			Иначе
				Подписант  ="Ивановой О.Г., действующей на основании доверенности №34 от 31.01.2017 г.";	
			КонецЕсли; 
			
		Иначе
			Подписант  ="Самардаковой Валентины Валентиновны, действующей на основании доверенности № 59/01 от 18.04.2016 г.";
		КонецЕсли;
		
		ОбластьМакета.Параметры.Подписант = Подписант;
		//
		ОбластьМакета.Параметры.НомерДок = СсылкаНаОбъект.Номер;
		ОбластьМакета.Параметры.ДатаДок	= Формат(СсылкаНаОбъект.Дата, "ДЛФ=DD");
		
		ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");
		ИтНДС   = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
		ИтВсего = ИтСумма+ИтНДС;	
		
		ОбластьМакета.Параметры.ИтВсего 	=  Формат(ИтВсего, "ЧДЦ=2");
		ОбластьМакета.Параметры.ИтНДС 	=   ИтНДС;
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		ОбластьМакета.Параметры.СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		
		ТабДок.Вывести(ОбластьМакета);
		
		////////////////////////////////////////////////////////////////////////////////////////////////	
		// табличная часть	
		
		
		Отбор = Новый Структура;
		Отбор.Вставить("Ссылка",СсылкаНаОбъект);
		//
		Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);
		//
		
		//
		Для Каждого Стр из Выборка Цикл
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			
			
			Заявка 				= Стр.Заявка;
			Ном   				= Стр.НомерСтроки;
			
			ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
			//
			Сумма = Стр.Сумма;
			НДС   = Стр.СуммаНДС;
			Всего = Сумма+НДС;
			
			Авто = Заявка.ПараметрыПеревозки[0].ТС.Наименование;
			
			
			Если ФилиалАкта = "Новочебоксарск" Тогда
				НомерТТН = яобщийМодуль.НайтиТТН(Заявка,9).ТекстТТН;
			Иначе
				НомерТТН = яобщийМодуль.НайтиТТН(Заявка,7).ТекстТТН;
			КонецЕсли;
			
			
			НомерТТН = СтрЗаменить(НомерТТН, ",", "");
			
			ОбластьСтрока.Параметры.Ном	 = Ном;
			
			ОбластьСтрока.Параметры.НомерПоручения	= Заявка.ПоручениеЭкспедитора;
			
			ОбластьСтрока.Параметры.ДатаЗагрузки= Формат(Заявка.ВремяЗагрузки, "ДЛФ=Д");	
			ОбластьСтрока.Параметры.ДатаДоставки= Формат(Заявка.ДатаРазгрузкиКон, "ДЛФ=Д");	
			
			ОбластьСтрока.Параметры.ФИОВодителя	= ФИОВодителя;
			ОбластьСтрока.Параметры.Авто = Авто;	
			ОбластьСтрока.Параметры.Маршрут	= Стр.Маршрут.Наименование;
			ОбластьСтрока.Параметры.НомерТТН = НомерТТН;
			ОбластьСтрока.Параметры.Сумма = Сумма;
			
			Если ФилиалАкта = "Новочебоксарск" Тогда
				ОбластьСтрока.Параметры.КолвоДопТчк = 0;
				ОбластьСтрока.Параметры.Доплата = 0;
			Иначе
				ОбластьСтрока.Параметры.КолвоДопТчк = "";
				ОбластьСтрока.Параметры.Доплата = "";
			КонецЕсли; 
			
			ОбластьСтрока.Параметры.Грузоотправитель = Заявка.МестоЗагрузки;
			ОбластьСтрока.Параметры.Грузополучатель = Заявка.МестоРазгрузки;
			
			Если СтрНайти(Стр.Маршрут.Наименование, "Штрафные санкции")>0 Тогда	
				ОбластьСтрока.Параметры.НомерПоручения	= Стр.Маршрут.Наименование;
				ОбластьСтрока.Параметры.ДатаЗагрузки = "";
				ОбластьСтрока.Параметры.ДатаДоставки = "";
				ОбластьСтрока.Параметры.Маршрут = "";
				ОбластьСтрока.Параметры.Грузоотправитель = "";		
				ОбластьСтрока.Параметры.Грузополучатель = "";
				ОбластьСтрока.Параметры.Авто = "";
				ОбластьСтрока.Параметры.ФИОВодителя = "";
				ОбластьСтрока.Параметры.НомерТТН = "";
				ОбластьСтрока.Параметры.Доплата = Сумма;			
				
	//			Высота = ОбластьМакета.ВысотаТаблицы+Ном;
				//ОбластьСтрока.Область(Высота,3,Высота,12).Объединить();
	            //ОбластьСтрока.Область(Высота,3,Высота,12).Текст = Стр.Маршрут.Наименование;
				
				//ТабДок.Область(Высота,3,Высота,12).Объединить();
				//ТабДок.Область(Высота,3,Высота,12).Текст = Стр.Маршрут.Наименование;
				
			КонецЕсли; 
			
			ТабДок.Вывести(ОбластьСтрока);		
			
			Если СтрНайти(Стр.Маршрут.Наименование, "Штрафные санкции")>0 Тогда	
				//ОбластьСтрока.Параметры.НомерПоручения	= Стр.Маршрут.Наименование;
				//ОбластьСтрока.Параметры.ДатаЗагрузки = "";
				//ОбластьСтрока.Параметры.ДатаДоставки = "";
				//ОбластьСтрока.Параметры.Маршрут = "";
				//ОбластьСтрока.Параметры.Грузоотправитель = "";		
				//ОбластьСтрока.Параметры.Грузополучатель = "";
				//ОбластьСтрока.Параметры.Авто = "";
				//ОбластьСтрока.Параметры.ФИОВодителя = "";
				//ОбластьСтрока.Параметры.НомерТТН = "";
				//ОбластьСтрока.Параметры.Доплата = Сумма;			
				
				Высота = ОбластьМакета.ВысотаТаблицы+Ном;
				//ОбластьСтрока.Область(Высота,3,Высота,12).Объединить();
	            //ОбластьСтрока.Область(Высота,3,Высота,12).Текст = Стр.Маршрут.Наименование;
				
				ТабДок.Область(Высота,3,Высота,12).Объединить();
				ТабДок.Область(Высота,3,Высота,12).Текст = Стр.Маршрут.Наименование;
				
			КонецЕсли; 

			
		КонецЦикла;

		//// подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		//
		
		ОбластьПодвал.Параметры.Сумма 	= ИтСумма;
		
		ОбластьПодвал.Параметры.НДС 	= ИтНДС;
		ОбластьПодвал.Параметры.Всего 	= Формат(ИтВсего, "ЧДЦ=2");
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабДок_КимберлиКларк(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_КимберлиКларк"); 
		
		//////////////////////////////////////////
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ДанныеШапки = ПолучитьДанныеШапки(СсылкаНаОбъект);
		//
		//РуководительФилиала=РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		//РуководительРП = РуководительФилиала.ФамилияИОРП;
		//
		//Ответственный=ДанныеШапки.ПодписьРук; //РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		//Доверенность=РегистрыСведений.яДоверенностиПользователей.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Пользователь",Ответственный));
		//
		//НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		//
		//ДолжностьРуководителяКонтрагента="";ЗаказчикВЛицеИм="";ЗаказчикВЛицеРП="";Устава ="Устава";
		//	
		//КонтактноеЛицо = Справочники.КонтактныеЛица.КонтактноеЛицоПоУмолчанию(СсылкаНаОбъект.Контрагент);
		//
		//Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		//	РеквизитыКонтактногоЛица = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		//	КонтактноеЛицо, "Фамилия, Имя, Отчество, Должность, ФамилияРП, ИмяРП, ОтчествоРП, ДействуетНаОсновании");
		//	
		//	РуководительКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(
		//	РеквизитыКонтактногоЛица.Фамилия, 
		//	РеквизитыКонтактногоЛица.Имя,
		//	РеквизитыКонтактногоЛица.Отчество,
		//	Ложь);
		//	ДолжностьРуководителяКонтрагента = РеквизитыКонтактногоЛица.Должность;
		//	ПредполагаемыйПол = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(СокрП(РуководительКонтрагента));
		//КонецЕсли;
		//
		//ЗаказчикВЛицеИм = РуководительКонтрагента;
		//Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		//	Если СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП)="" Тогда
		//		ЗаказчикВЛицеРП =ЗаказчикВЛицеИм;
		//	Иначе
		//		ЗаказчикВЛицеРП =СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП);
		//	КонецЕсли;
		//	ЗаказчикВЛицеРП = ДолжностьРуководителяКонтрагента + " " + ЗаказчикВЛицеРП;
		//	
		//ЗаказчикВЛицеИм = ЗаказчикВЛицеИм;
		//	
		//Если СокрЛП(РеквизитыКонтактногоЛица.ДействуетНаОсновании)="" Тогда
		//	Устава ="Устава";
		//Иначе
		//	Устава =РеквизитыКонтактногоЛица.ДействуетНаОсновании;
		//КонецЕсли; 
		
		//КонецЕсли; 
		//
		//
		//ТекстДог="";
		//Если НастройкиПечати.Акт_ВыводитьДоговорСверху Тогда
		//	ТекстДог=ТекстДоговора(СсылкаНаОбъект);
		//КонецЕсли; 
		//
		//Если СокрЛП(Ответственный.ФамилияИОРП)="" Тогда
		//	ФИО 		= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(Ответственный.Фамилия+" "+Ответственный.Имя+" "+Ответственный.Отчество);
		//иначе
		//	ФИО 		= Ответственный.ФамилияИОРП;
		//КонецЕсли; 
		//
		//Если СокрЛП(Ответственный.ДолжностьРП)="" Тогда
		//	Должность 		= "";
		//иначе
		//	Должность 		= Ответственный.ДолжностьРП;
		//КонецЕсли; 
		//
		//Если СокрЛП(Доверенность.Доверенность)="" Тогда
		//	НаОсновании="Устава";
		//иначе
		//	НаОсновании="доверенности "+ Доверенность.Доверенность;
		//КонецЕсли; 
		//
		//Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		//	ФИО 		= "Черникова И.Е.";	
		//	Должность 		= "Генерального директора";
		//	НаОсновании="Устава";
		//КонецЕсли; 	
		//
		//ОтветственныйКонтрагента = Справочники.яРуководителиКонтрагента.ВернутьКонтактноеЛицо(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Филиал);	
		//Если НЕ ОтветственныйКонтрагента.Пустая() Тогда
		//	ЗаказчикВЛицеРП = ОтветственныйКонтрагента.ДолжностьРП + " " +ОтветственныйКонтрагента.РукРодПадеж;
		//	Устава = ОтветственныйКонтрагента.Устав;
		//	ЗаказчикВЛицеИм = ОтветственныйКонтрагента.РукИмПадеж;
		//	ДолжностьРуководителяКонтрагента = ОтветственныйКонтрагента.ДолжностьИП;		
		//КонецЕсли; 
		//
		//
		ОбластьМакета.Параметры.НомерДок = ДанныеШапки.НомерДок;
		//
		//ОбластьМакета.Параметры.ТекстДог=ТекстДог;
		//
		//ОбластьМакета.Параметры.ГородФилиала = ДанныеШапки.Филиал.ГородФилиала;
		ОбластьМакета.Параметры.ДатаДок	= Формат(ДанныеШапки.ДатаДок, "ДЛФ=DD");
		ОбластьМакета.Параметры.ПолнНаименование = ДанныеШапки.ПолнНаименование;
		//ОбластьМакета.Параметры.ДолжностьВЛице=Должность;
		//
		//ОбластьМакета.Параметры.ПеревозчикВЛице=ФИО;
		//ОбластьМакета.Параметры.НаОсновании =НаОсновании;
		ОбластьМакета.Параметры.КонтрагентПолнНаименование = ДанныеШапки.КонтрагентНаименованиеПолное;				
		//ОбластьМакета.Параметры.ЗаказчикВЛице =ЗаказчикВЛицеРП;
		//ОбластьМакета.Параметры.Устава				=Устава;
		//ОбластьМакета.Параметры.НазваниеУслуг="Транспортное обслуживание по маршрутам:";
		//ОбластьМакета.Параметры.ТекстНомерЗаказа								="";
		
		ТабДок.Вывести(ОбластьМакета);
		
		////////////////////////////////////////////////////////////////////////////////////////////////	
		// табличная часть	
		ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Ссылка",СсылкаНаОбъект);
		//
		Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);
		//
		
		//
		Для Каждого Стр из Выборка Цикл
			Заявка 				= Стр.Заявка;
			Ном   				= Стр.НомерСтроки;
			//
			//ЭтоПростой = Ложь;
			//Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
			//	ЭтоПростой = Истина;
			//	НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиПретензия();
			//	Заявка = Заявка.Заявка; //для простоя надо брать данные из док основания претензии
			//КонецЕсли;
			//
			ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
			//
			Сумма = Стр.Сумма;
			//НДС   = Стр.СуммаНДС;
			//Всего = Сумма+НДС;
			//
			//НаименованиеТовара = яОбщийМодуль.СформироватьСтрокуНаименованиеТовара(Стр, НастройкиПечати, "Акт", ЭтоПростой);
			//
			//Если ИННКонтрагента = ИННФерреро Тогда			
			//	НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", "Транспортные услуги");			
			//КонецЕсли; 	
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			
			НомерТТН = яобщийМодуль.НайтиТТН(Заявка,7).ТекстТТН;
			
			НомерТТН = СтрЗаменить(НомерТТН, ",", "");
			
			ОбластьСтрока.Параметры.Ном	 = Ном;
			ОбластьСтрока.Параметры.ДатаРейса= Формат(Заявка.ВремяЗагрузки, "ДЛФ=Д");	
			ОбластьСтрока.Параметры.ФИОВодителя	= ФИОВодителя;
			ОбластьСтрока.Параметры.НомерМашины = "";	
			ОбластьСтрока.Параметры.Маршрут	= Стр.Маршрут.Наименование+" "+Формат(Заявка.ВремяЗагрузки, "ДЛФ=Д");       
			ОбластьСтрока.Параметры.НомерТТН = НомерТТН;
			ОбластьСтрока.Параметры.Сумма = Сумма;
			//
			//ОбластьСтрока.Параметры.ТоварНаименование = НаименованиеТовара;
			//
			//Если НДС=0 Тогда
			//	ОбластьСтрока.Параметры.НДС = "-----";
			//Иначе
			//	ОбластьСтрока.Параметры.НДС = НДС;
			//КонецЕсли; 
			//
			//ОбластьСтрока.Параметры.Всего = Сумма + НДС;
			//
			ТабДок.Вывести(ОбластьСтрока);		
			//
			//
			//Если НастройкиПечати.Акт_АвтоОтдельнойСтрокой Тогда
			//	
			//	ОбластьАвто 	= Макет.ПолучитьОбласть("Авто");
			//	
			//	ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			//	Авто = Заявка.ПараметрыПеревозки[0].ТС.Наименование;
			//	Авто = "а/м-"+Авто;
			//	
			//	Если НастройкиПечати.Счет_Прицеп Тогда				
			//		Прицеп = Заявка.ПараметрыПеревозки[0].Прицеп.Наименование;
			//		Авто = Авто +  ?(СокрЛП(Прицеп)="" ,"",   " / "+Прицеп);				 
			//	КонецЕсли; 
			//	
			//	ОбластьАвто.Параметры.Авто 	= Авто;
			
			//	ТабДок.Вывести(Областьавто);
			
			//КонецЕсли; 	
			
			
		КонецЦикла;
		////
		////// итоги //////////////////
		ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");
		ИтНДС   = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
		ИтВсего = ИтСумма+ИтНДС;	
		////
		//// подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		//
		Параметры = Новый Структура("Организация,Период,ОтветственноеЛицо",СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель); 	
		ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;
		
		ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;	
		Если НЕ ЗначениеЗаполнено(ПодписьРуководителя) Тогда
			ПодписьРуководителя ="Черников И.Е.";
		КонецЕсли; 
		//
		//
		//
		ОбластьПодвал.Параметры.ИтогСумма 	= ИтСумма;
		
		ОбластьПодвал.Параметры.ИтогНДС 	= ИтНДС;
		ОбластьПодвал.Параметры.ИтогВсего 	= Формат(ИтВсего, "ЧДЦ=2");
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		ОбластьПодвал.Параметры.СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		//
		//ОбластьПодвал.Параметры.ПодписьРуководителя 	=  ПодписьРуководителя;
		//
		//ОбластьПодвал.Параметры.ВТомЧисле 		= ПолучитьСтрокуНДС(ВалютаДокумента,ИтНДС,СсылкаНаОбъект.КурсВзаиморасчетов);
		//
		//ОбластьПодвал.Параметры.НомерДок = ДанныеШапки.НомерДок;
		//ОбластьПодвал.Параметры.ДатаДокФ = Формат(ДанныеШапки.ДатаДок, "ДФ=dd.MM.yyyy");
		//
		//
		//
		//ОбластьПодвал.Параметры.ДолжностьРуководителяКонтрагента=ДолжностьРуководителяКонтрагента;
		//ОбластьПодвал.Параметры.ЗаказчикВЛицеИм=ЗаказчикВЛицеИм;
		
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабДок_Русвинил(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_Русвинил"); 
		
		//////////////////////////////////////////
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		//ДанныеШапки = ПолучитьДанныеШапки(СсылкаНаОбъект);
		//
		//РуководительФилиала=РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		//РуководительРП = РуководительФилиала.ФамилияИОРП;
		//
		//Ответственный=ДанныеШапки.ПодписьРук; //РегистрыСведений.яОтветственныеЛицаФилиалов.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Филиал,ОтветственноеЛицо",ДанныеШапки.Филиал,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель)).Пользователь;
		//Доверенность=РегистрыСведений.яДоверенностиПользователей.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Пользователь",Ответственный));
		//
		//НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		//
		//ДолжностьРуководителяКонтрагента="";ЗаказчикВЛицеИм="";ЗаказчикВЛицеРП="";Устава ="Устава";
		//	
		//КонтактноеЛицо = Справочники.КонтактныеЛица.КонтактноеЛицоПоУмолчанию(СсылкаНаОбъект.Контрагент);
		//
		//Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		//	РеквизитыКонтактногоЛица = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		//	КонтактноеЛицо, "Фамилия, Имя, Отчество, Должность, ФамилияРП, ИмяРП, ОтчествоРП, ДействуетНаОсновании");
		//	
		//	РуководительКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(
		//	РеквизитыКонтактногоЛица.Фамилия, 
		//	РеквизитыКонтактногоЛица.Имя,
		//	РеквизитыКонтактногоЛица.Отчество,
		//	Ложь);
		//	ДолжностьРуководителяКонтрагента = РеквизитыКонтактногоЛица.Должность;
		//	ПредполагаемыйПол = СотрудникиКлиентСервер.ОпределитьПолПоОтчеству(СокрП(РуководительКонтрагента));
		//КонецЕсли;
		//
		//ЗаказчикВЛицеИм = РуководительКонтрагента;
		//Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		//	Если СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП)="" Тогда
		//		ЗаказчикВЛицеРП =ЗаказчикВЛицеИм;
		//	Иначе
		//		ЗаказчикВЛицеРП =СокрЛП(РеквизитыКонтактногоЛица.ФамилияРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ИмяРП)+" "+СокрЛП(РеквизитыКонтактногоЛица.ОтчествоРП);
		//	КонецЕсли;
		//	ЗаказчикВЛицеРП = ДолжностьРуководителяКонтрагента + " " + ЗаказчикВЛицеРП;
		//	
		//ЗаказчикВЛицеИм = ЗаказчикВЛицеИм;
		//	
		//Если СокрЛП(РеквизитыКонтактногоЛица.ДействуетНаОсновании)="" Тогда
		//	Устава ="Устава";
		//Иначе
		//	Устава =РеквизитыКонтактногоЛица.ДействуетНаОсновании;
		//КонецЕсли; 
		
		//КонецЕсли; 
		//
		//
		//ТекстДог="";
		//Если НастройкиПечати.Акт_ВыводитьДоговорСверху Тогда
		//	ТекстДог=ТекстДоговора(СсылкаНаОбъект);
		//КонецЕсли; 
		//
		//Если СокрЛП(Ответственный.ФамилияИОРП)="" Тогда
		//	ФИО 		= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(Ответственный.Фамилия+" "+Ответственный.Имя+" "+Ответственный.Отчество);
		//иначе
		//	ФИО 		= Ответственный.ФамилияИОРП;
		//КонецЕсли; 
		//
		//Если СокрЛП(Ответственный.ДолжностьРП)="" Тогда
		//	Должность 		= "";
		//иначе
		//	Должность 		= Ответственный.ДолжностьРП;
		//КонецЕсли; 
		//
		//Если СокрЛП(Доверенность.Доверенность)="" Тогда
		//	НаОсновании="Устава";
		//иначе
		//	НаОсновании="доверенности "+ Доверенность.Доверенность;
		//КонецЕсли; 
		//
		//Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		//	ФИО 		= "Черникова И.Е.";	
		//	Должность 		= "Генерального директора";
		//	НаОсновании="Устава";
		//КонецЕсли; 	
		//
		//ОтветственныйКонтрагента = Справочники.яРуководителиКонтрагента.ВернутьКонтактноеЛицо(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Филиал);	
		//Если НЕ ОтветственныйКонтрагента.Пустая() Тогда
		//	ЗаказчикВЛицеРП = ОтветственныйКонтрагента.ДолжностьРП + " " +ОтветственныйКонтрагента.РукРодПадеж;
		//	Устава = ОтветственныйКонтрагента.Устав;
		//	ЗаказчикВЛицеИм = ОтветственныйКонтрагента.РукИмПадеж;
		//	ДолжностьРуководителяКонтрагента = ОтветственныйКонтрагента.ДолжностьИП;		
		//КонецЕсли; 
		//
		//
		//ОбластьМакета.Параметры.НомерДок = ДанныеШапки.НомерДок;
		//
		//ОбластьМакета.Параметры.ТекстДог=ТекстДог;
		//
		//ОбластьМакета.Параметры.ГородФилиала = ДанныеШапки.Филиал.ГородФилиала;
		//ОбластьМакета.Параметры.ДатаДок	= Формат(ДанныеШапки.ДатаДок, "ДЛФ=DD");
		//ОбластьМакета.Параметры.ПолнНаименование = ДанныеШапки.ПолнНаименование;
		//ОбластьМакета.Параметры.ДолжностьВЛице=Должность;
		//
		//ОбластьМакета.Параметры.ПеревозчикВЛице=ФИО;
		//ОбластьМакета.Параметры.НаОсновании =НаОсновании;
		//ОбластьМакета.Параметры.КонтрагентНаименованиеПолное = ДанныеШапки.КонтрагентНаименованиеПолное;				
		//ОбластьМакета.Параметры.ЗаказчикВЛице =ЗаказчикВЛицеРП;
		//ОбластьМакета.Параметры.Устава				=Устава;
		//ОбластьМакета.Параметры.НазваниеУслуг="Транспортное обслуживание по маршрутам:";
		//ОбластьМакета.Параметры.ТекстНомерЗаказа								="";
		
		ТабДок.Вывести(ОбластьМакета);
		
		
		////////////////////////////////////////////////////////////////////////////////////////////////	
		// табличная часть	
		ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Ссылка",СсылкаНаОбъект);
		//
		Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);
		//
		
		//
		Для Каждого Стр из Выборка Цикл
			//Заявка 				= Стр.Заявка;
			//Ном   				= Стр.НомерСтроки;
			//
			//ЭтоПростой = Ложь;
			//Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
			//	ЭтоПростой = Истина;
			//	НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиПретензия();
			//	Заявка = Заявка.Заявка; //для простоя надо брать данные из док основания претензии
			//КонецЕсли;
			//
			//ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			//ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
			//
			//Сумма = Стр.Сумма;
			//НДС   = Стр.СуммаНДС;
			//Всего = Сумма+НДС;
			//
			//НаименованиеТовара = яОбщийМодуль.СформироватьСтрокуНаименованиеТовара(Стр, НастройкиПечати, "Акт", ЭтоПростой);
			//
			//Если ИННКонтрагента = ИННФерреро Тогда			
			//	НаименованиеТовара = СтрЗаменить(НаименованиеТовара, "Транспортно-экспедиционные услуги", "Транспортные услуги");			
			//КонецЕсли; 	
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			//
			//ОбластьСтрока.Параметры.ТоварНаименование = НаименованиеТовара;
			//
			//Если НДС=0 Тогда
			//	ОбластьСтрока.Параметры.НДС = "-----";
			//Иначе
			//	ОбластьСтрока.Параметры.НДС = НДС;
			//КонецЕсли; 
			//
			//ОбластьСтрока.Параметры.Всего = Сумма + НДС;
			//
			ТабДок.Вывести(ОбластьСтрока);		
			//
			//
			//Если НастройкиПечати.Акт_АвтоОтдельнойСтрокой Тогда
			//	
			//	ОбластьАвто 	= Макет.ПолучитьОбласть("Авто");
			//	
			//	ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			//	Авто = Заявка.ПараметрыПеревозки[0].ТС.Наименование;
			//	Авто = "а/м-"+Авто;
			//	
			//	Если НастройкиПечати.Счет_Прицеп Тогда				
			//		Прицеп = Заявка.ПараметрыПеревозки[0].Прицеп.Наименование;
			//		Авто = Авто +  ?(СокрЛП(Прицеп)="" ,"",   " / "+Прицеп);				 
			//	КонецЕсли; 
			//	
			//	ОбластьАвто.Параметры.Авто 	= Авто;
			
			//	ТабДок.Вывести(Областьавто);
			
			//КонецЕсли; 	
			
			
		КонецЦикла;
		////
		////// итоги //////////////////
		//ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");
		//ИтНДС   = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
		//ИтВсего = ИтСумма+ИтНДС;	
		////
		//// подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		//
		//Параметры = Новый Структура("Организация,Период,ОтветственноеЛицо",СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель); 	
		//ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;
		//
		//ПодписьРуководителя =  БухгалтерскиеОтчетыВызовСервера.ПолучитьДанныеОтветственногоЛица(Параметры).РасшифровкаПодписи;	
		//Если НЕ ЗначениеЗаполнено(ПодписьРуководителя) Тогда
		//	ПодписьРуководителя ="Черников И.Е.";
		//КонецЕсли; 
		//
		//
		//
		//ОбластьПодвал.Параметры.ИтВсего 	= ИтВсего;
		//
		//ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		//ОбластьПодвал.Параметры.СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		//
		//ОбластьПодвал.Параметры.ПодписьРуководителя 	=  ПодписьРуководителя;
		//
		//ОбластьПодвал.Параметры.ВТомЧисле 		= ПолучитьСтрокуНДС(ВалютаДокумента,ИтНДС,СсылкаНаОбъект.КурсВзаиморасчетов);
		//
		//ОбластьПодвал.Параметры.НомерДок = ДанныеШапки.НомерДок;
		//ОбластьПодвал.Параметры.ДатаДокФ = Формат(ДанныеШапки.ДатаДок, "ДФ=dd.MM.yyyy");
		//
		//
		//
		//ОбластьПодвал.Параметры.ДолжностьРуководителяКонтрагента=ДолжностьРуководителяКонтрагента;
		//ОбластьПодвал.Параметры.ЗаказчикВЛицеИм=ЗаказчикВЛицеИм;
		
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

	Функция ПолучитьТабДок_СИБУР(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АктСибур"); // АКТ_сибур
		
		НаборПараметровШапки = ПолучитьДанныеШапки(СсылкаНаОбъект);
		Если НЕ ЗначениеЗаполнено(НаборПараметровШапки) Тогда
			Возврат ТабДок;
		КонецЕсли;
		
		ЗаказчикВЛицеИм = НаборПараметровШапки.ЗаказчикВЛицеИм;
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры,НаборПараметровШапки); 
		//ТекстДог        = ТекстДоговора(СсылкаНаОбъект);
		
		ОбластьШапка.Параметры.ПечДоговор	 = СокрЛП(СсылкаНаОбъект.ДоговорКонтрагента.Наименование);
		
		ОбластьШапка.Параметры.ДатаДок	 = Формат(НаборПараметровШапки.ДатаДок, "ДФ=dd.MM.yyyy; ДЛФ=D");
		
		
		ТабДок.Вывести(ОбластьШапка);
		
		
		ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		
		ИтогоСумма      = 0;
		ИтогоНДС      = 0;
		ИтогоВсего      = 0;
		Ном=0;
		
		ОбластьМаршрут_МВИДЕО  = Макет.ПолучитьОбласть("Маршрут");
		Для Каждого Стр из ОбщаяВыборка Цикл
			
			Ном=Ном+1;
			
			//СтруктураАдреса = РегламентированнаяОтчетностьКлиентСервер.РазложитьАдрес(Год.АдресМестонахождения);
			
			НомерМаш = Стр.Заявка.ПараметрыПеревозки[0].ТС.ГосНомер;
			НомерПрицепа = Стр.Заявка.ПараметрыПеревозки[0].Прицеп.Наименование;
			
			НомерМаш = СтрЗаменить(НомерМаш, " ", "");	
			НомерПрицепа = СтрЗаменить(НомерПрицепа, " ", "");			
			
			НомерМаш = Лев(НомерМаш, 6);	
			НомерПрицепа = Лев(НомерПрицепа, 6);	
			
			ОбластьМаршрут_МВИДЕО.Параметры.Ном	=Ном;
			ОбластьМаршрут_МВИДЕО.Параметры.ДатаРейса=Формат(Стр.Заявка.ВремяЗагрузки, "ДФ=dd.MM.yyyy; ДЛФ=D");	
			ОбластьМаршрут_МВИДЕО.Параметры.ХарактерГруза	=Стр.Заявка.ХарактерГруза;	
			
			Если Стр.Маршрут.ТочкиМаршрута.Количество()=0 Тогда		
				сп = Новый СообщениеПользователю;
				сп.Текст = "В маршруте "+Стр.Маршрут.Наименование+" не заполнены точки маршрута! Печать отменена! Исправьте!";
				сп.Сообщить();
				Возврат Новый ТабличныйДокумент;
			КонецЕсли; 
			
			ОбластьМаршрут_МВИДЕО.Параметры.ПунктОтправки	=Стр.Маршрут.ТочкиМаршрута[0].Точка.Город;	
			ОбластьМаршрут_МВИДЕО.Параметры.Грузоотправитель=Стр.Заявка.Грузоотправитель.НаименованиеПолное;	
			
			Если Стр.Маршрут.ТочкиМаршрута.Количество()=1 Тогда		
				ОбластьМаршрут_МВИДЕО.Параметры.ПунктДоставки	=Стр.Маршрут.ТочкиМаршрута[0].Точка.Город;	
				ОбластьМаршрут_МВИДЕО.Параметры.ОблДоставки	=Стр.Маршрут.ТочкиМаршрута[0].Точка.Регион1;	
			Иначе	
				ОбластьМаршрут_МВИДЕО.Параметры.ПунктДоставки	=Стр.Маршрут.ТочкиМаршрута[1].Точка.Город;	
				ОбластьМаршрут_МВИДЕО.Параметры.ОблДоставки	=Стр.Маршрут.ТочкиМаршрута[1].Точка.Регион1;	
			КонецЕсли; 
			
			ОбластьМаршрут_МВИДЕО.Параметры.Грузополучатель	=Стр.Заявка.Грузополучатель.НаименованиеПолное;	
			ОбластьМаршрут_МВИДЕО.Параметры.НомерМаш	=НомерМаш;
			ОбластьМаршрут_МВИДЕО.Параметры.НомерПрицепа=НомерПрицепа;
			
			ВесГруза = Стр.Заявка.ВесГруза;
			ОбластьМаршрут_МВИДЕО.Параметры.ВесГруза	=ВесГруза;
			
			Если ВесГруза=0 Тогда			
				сп = Новый СообщениеПользователю;
				сп.Текст = "В заявке "+Стр.Заявка.Номер+" от "+Стр.Заявка.Дата+" не указан вес груза! Печать отменена! Исправьте!";
				сп.Сообщить();
				Возврат Новый ТабличныйДокумент;		
			Иначе
				ОбластьМаршрут_МВИДЕО.Параметры.Тариф	=ОКР(Стр.Всего / ВесГруза,2);
			КонецЕсли;
			
			ОбластьМаршрут_МВИДЕО.Параметры.ПечВал	="RUR";	
			ОбластьМаршрут_МВИДЕО.Параметры.Сумма	=Стр.Сумма;	
			ОбластьМаршрут_МВИДЕО.Параметры.СтавкаНДС	=Стр.СтавкаНДС;	
			ОбластьМаршрут_МВИДЕО.Параметры.НДС=Стр.СуммаНДС;	
			
			ИтогоСумма = ИтогоСумма+Стр.Сумма;		
			ИтогоНДС   = ИтогоНДС+Стр.СуммаНДС;
			ИтогоВсего = ИтогоВсего+Стр.Всего;		
			
			ТабДок.Вывести(ОбластьМаршрут_МВИДЕО);
		КонецЦикла;
		
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		
		ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры,НаборПараметровШапки); 
		
		
		ОбластьПодвал.Параметры.ИтогоСумма	= ИтогоСумма; 
		ОбластьПодвал.Параметры.ИтогоНДС  	= ИтогоНДС; 
		ОбластьПодвал.Параметры.ИтогоВсего	= ИтогоВсего; 
		
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		ОбластьПодвал.Параметры.СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогоВсего, ВалютаДокумента);
		
		
		Ответственный=СсылкаНаОбъект.ПодписьРук;
		Доверенность=РегистрыСведений.яДоверенностиПользователей.ПолучитьПоследнее(СсылкаНаОбъект.Дата,новый Структура("Пользователь",Ответственный));
		
		
		
		НомерДоверенности  = Доверенность.Доверенность;
		
		ФИО 		= ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(Ответственный.Фамилия+" "+Ответственный.Имя+" "+Ответственный.Отчество);
		
		ОбластьПодвал.Параметры.ПодписьРуководителя = ФИО;
		ОбластьПодвал.Параметры.НашаДовер = НомерДоверенности;
		
		
		ОбластьПодвал.Параметры.ЗаказчикВЛицеИм     = ЗаказчикВЛицеИм;
		ОбластьПодвал.Параметры.Доверки = НаборПараметровШапки.Устава;	
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
		
	КонецФункции

	Функция ПолучитьТабДок_ГАС(СсылкаНаОбъект, ОбъектыПечати,ТабДок) Экспорт
		
		Макет =  ПолучитьМакет("АКТ_ГАС"); 
		
		СведенияОПоставщике       = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);		
		СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент,  СсылкаНаОбъект.Дата);
		
		ДанныеКонтрагента = Новый Структура();
		яОбщийМодуль.ЗаполнитьДанныеКонтрагента(СсылкаНаОбъект.ДоговорКонтрагента, ДанныеКонтрагента, "");
		
		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Номер = СокрЛП(СсылкаНаОбъект.Номер);
		ОбластьМакетаШапка.Параметры.Дата = Формат(СсылкаНаОбъект.Дата, "ДЛФ=DD");		
		
		// костыль
		#Если Клиент И Сервер Тогда
		 	СсылкаНаОбъект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();    	
		#КонецЕсли  
	//	ОбластьМакетаШапка.Параметры.Заполнить(СведенияОПоставщике);		
		
		ОбластьМакетаШапка.Параметры.ПредставлениеИсполнителя =  СведенияОПоставщике.СокращенноеНаименование;
		ОбластьМакетаШапка.Параметры.ЮридическийАдрес =  СведенияОПоставщике.ЮридическийАдрес;
		ОбластьМакетаШапка.Параметры.ИНН =  СведенияОПоставщике.ИНН;
		ОбластьМакетаШапка.Параметры.КПП =  СведенияОПоставщике.КПП;
		
		ОбластьМакетаШапка.Параметры.ПредставлениеЗаказчика =  СведенияОГрузополучателе.ПолноеНаименование;
		ОбластьМакетаШапка.Параметры.ЮридическийАдресЗаказчика =  СведенияОГрузополучателе.ЮридическийАдрес;
		ОбластьМакетаШапка.Параметры.ИННЗаказчика =  СведенияОГрузополучателе.ИНН;
		ОбластьМакетаШапка.Параметры.КППЗаказчика =  СведенияОГрузополучателе.КПП;
		
		ТабДок.Вывести(ОбластьМакетаШапка);

		ЕстьСтрокиСоСтавкойНДС=Ложь;
		СтавкаНДСизСтроки = Перечисления.СтавкиНДС.БезНДС;
		
		НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиКонтрагента(СсылкаНаОбъект.Контрагент);
		
		ОбщаяВыборка = ПолучитьТаблицуДокумента(СсылкаНаОбъект);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Ссылка",СсылкаНаОбъект);
		
		Выборка = ОбщаяВыборка.НайтиСтроки(Отбор);

		Для Каждого Стр из Выборка Цикл
			Заявка 				= Стр.Заявка;
			Ном   				= Стр.НомерСтроки;
			
			ЭтоПростой = Ложь;
			Если ТипЗнч(Заявка) = Тип("ДокументСсылка.яПретензия") Тогда
				ЭтоПростой = Истина;
				НастройкиПечати = яОбщийМодуль.ВернутьНастройкиПечатиПретензия();
				Заявка = Заявка.Заявка; //для простоя надо брать данные из док основания претензии
			КонецЕсли;
					
			ПараметрыПеревозки 	= Заявка.ПараметрыПеревозки[0];
			ФИОВодителя 		= ПараметрыПеревозки.Водитель.ФИО;
			
			Цена = Стр.Сумма;
			Сумма = Стр.Сумма;
			НДС   = Стр.СуммаНДС;
			Всего = Сумма+НДС;
			
			НаименованиеТовара = 
			СтрШаблон("%1 (%2) %3 %4", 
			Стр.Номенклатура, 
			Стр.Маршрут, 
			СтрШаблон("Заявка %1", Стр.ЗаявкаНомерЗаказа),
			СтрШаблон("по Договору %1 от %2", Стр.ДоговорКонтрагентаНомер, Формат(Стр.ДоговорКонтрагентаДата, "ДФ=dd.MM.yyyy"))
			);
			
			ОбластьСтрока 	= Макет.ПолучитьОбласть("Строка");
			
			ЕдИзм = "шт";
			Колво = "1";
			
			ОбластьСтрока.Параметры.Ном 	= Ном;
			//ОбластьСтрока.Параметры.Маршрут = НаименованиеТовара;
			
			//ОбластьСтрока.Параметры.ЕдИзм 	= ЕдИзм;
			//ОбластьСтрока.Параметры.Колво 	= Колво;

			//ОбластьСтрока.Параметры.Цена 	= Цена;
			ОбластьСтрока.Параметры.Сумма 	= Сумма;
			ОбластьСтрока.Параметры.НаименованиеТовара = НаименованиеТовара;
			ТабДок.Вывести(ОбластьСтрока);
			
			Если НЕ Стр.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
				ЕстьСтрокиСоСтавкойНДС=Истина;
				СтавкаНДСизСтроки = Стр.СтавкаНДС;
			КонецЕсли;
			
		КонецЦикла;	 
		
		//СтавкаНДСЧисло = яОбщийМодуль.ПолучитьСтавкуНДС(СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС);
		
		ИтСумма = СсылкаНаОбъект.Услуги.Итог("Сумма");	
		ИтСуммаНДС = СсылкаНаОбъект.Услуги.Итог("СуммаНДС");
		
		ЕстьНДС=НЕ СсылкаНаОбъект.Контрагент.ОсновнаяСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		Если ИтСуммаНДС=0 И НЕ ЕстьСтрокиСоСтавкойНДС Тогда
			ЕстьНДС=Ложь;
		Иначе
			ЕстьНДС=Истина;
		КонецЕсли; 	
		
		Если ЕстьНДС Тогда
			ИтНДС   = ИтСуммаНДС;
			ИтВсего = ИтСумма+ИтСуммаНДС;	
		Иначе
			ИтНДС   = "-";
			ИтВсего = ИтСумма;
		КонецЕсли; 
		
		ОбластьИтоги 	= Макет.ПолучитьОбласть("Итоги");	
		
		Если ЕстьНДС Тогда
			СтавкаНДС = СтавкаНДСизСтроки;
		Иначе
			СтавкаНДС = "";
		КонецЕсли; 
		
		ОбластьИтоги.Параметры.ИтСумма	= ИтСумма;
		ОбластьИтоги.Параметры.ИтНДС	= ИтНДС;
		ОбластьИтоги.Параметры.ИтВсего 	= Формат(ИтСумма+ ИтНДС,"ЧДЦ=2");
		
		ТабДок.Вывести(ОбластьИтоги);	
		
		////////// определить подвал ////////////////////
		ОбластьПодвал	= Макет.ПолучитьОбласть("Подвал");
		
		КоличествоСтрок = СсылкаНаОбъект.Услуги.Количество();
		
		ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
		СуммаПрописью 	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтВсего, ВалютаДокумента);
		
		СуммаПрописьюНДС	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтНДС, ВалютаДокумента);	
		
		ОбластьПодвал.Параметры.КолСтрок 	= КоличествоСтрок;	
		ОбластьПодвал.Параметры.ИтНДС		= ИтНДС;
		ОбластьПодвал.Параметры.ИтВсего 	= Формат(ИтСумма+ ИтНДС, "ЧДЦ=2");

		ОбластьПодвал.Параметры.СуммаПрописью = СуммаПрописью;
		//
		//ОбластьПодвал.Параметры.ДолжностьПредставителяИсполнителя = СведенияОПоставщике.РуководительФИО;
		//ОбластьПодвал.Параметры.ПредставительИсполнителя = СведенияОПоставщике.ДОлжностьРуководителяПредставление;
		//
		Если ЗначениеЗаполнено(ДанныеКонтрагента.ДолжностьРуководителя) Тогда
			ОбластьПодвал.Параметры.ДолжностьПредставителяЗаказчика = ДанныеКонтрагента.ДолжностьРуководителя;
			ОбластьПодвал.Параметры.ПредставительЗаказчика = ДанныеКонтрагента.КонтрагентРукИнициалы;	
		КонецЕсли; 
		
		
		ТабДок.Вывести(ОбластьПодвал);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
		ТабДок.Вывод = ИспользованиеВывода.Разрешить;
		
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДок.АвтоМасштаб = Истина;
		
		Возврат ТабДок;
	КонецФункции

#КонецОбласти 

#Область Сервисные 

Функция ПолучитьДанныеШапки(СсылкаНаОбъект)
	
	ЗапросШ = Новый Запрос;
	ЗапросШ.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка.Дата КАК ДатаДок,
	|	РеализацияТоваровУслуг.Ссылка.Номер КАК НомерДок,
	|	РеализацияТоваровУслуг.Ссылка.Филиал КАК Филиал,
	|	РеализацияТоваровУслуг.Ссылка.Организация.НаименованиеПолное КАК ПолнНаименование,
	|	РеализацияТоваровУслуг.ПодписьРук.ФамилияИОРП КАК ПеревозчикВЛице,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ПодписьРук.ДолжностьРП, """") КАК ДолжностьВЛице,
	|	РеализацияТоваровУслуг.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|	ЕСТЬNULL(яРуководителиКонтрагента.РукРодПадеж, """") КАК ЗаказчикВЛице,
	|	ЕСТЬNULL(яРуководителиКонтрагента.РукИмПадеж, """") КАК ЗаказчикВЛицеИм,
	|	ЕСТЬNULL(яРуководителиКонтрагента.Устав, """") КАК Устава,
	|	РеализацияТоваровУслуг.РО КАК РО,
	|	РеализацияТоваровУслуг.Проформа КАК Проформа,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	РеализацияТоваровУслуг.ПодписьГлБ КАК ПодписьГлБ,
	|	РеализацияТоваровУслуг.ПодписьРук КАК ПодписьРук
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.яРуководителиКонтрагента КАК яРуководителиКонтрагента
	|		ПО РеализацияТоваровУслуг.Контрагент = яРуководителиКонтрагента.Владелец
	|			И РеализацияТоваровУслуг.Филиал = яРуководителиКонтрагента.Филиал
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Ссылка";
	
	ЗапросШ.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	
	РезультатЗапросаШ = ЗапросШ.Выполнить();
	ВыборкаЗапросаШ = РезультатЗапросаШ.Выбрать();
	
	Пока ВыборкаЗапросаШ.Следующий() Цикл
		Возврат ВыборкаЗапросаШ ;
	КонецЦикла;
	Возврат "";
	
КонецФункции // ПолучитьДанныеШапки()

Функция ТекстДоговора(СсылкаНаОбъект)     
	Договор = СсылкаНаОбъект.ДоговорКонтрагента;
	ТекстДоговора = "";
	Если НЕ Договор.Пустая() Тогда
		ТекстДоговора = "Договор № "+СокрЛП(Договор.Номер) + " от " + Формат(Договор.Дата, "ДФ=dd.MM.yyyy") + "г." ;
	КонецЕсли;	
	Возврат	ТекстДоговора;
КонецФункции // ТекстДоговора 

Функция ДокументЗаполненНекорректно(ДокументПечати)
	Результат = Ложь;
	Если ДокументПечати.Филиал.Пустая() Тогда
		Сообщить("Филиал не указан!");
		Результат = Истина;
	Иначе
		Если НЕ ЗначениеЗаполнено(ДокументПечати.Филиал.ГородФилиала) Тогда
			Сообщить("Город Филиала не указан!");
			Результат = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции // КонтрольЗаполненияДокумента()

Функция ПолучитьТаблицуДокумента(СсылкаНаОбъект)
	
	Запрос = новый запрос;
	Запрос.УстановитьПараметр("МассивОбъектов",СсылкаНаОбъект);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслугУслуги.Номенклатура КАК Номенклатура,
	               |	РеализацияТоваровУслугУслуги.Сумма КАК Сумма,
	               |	РеализацияТоваровУслугУслуги.Количество КАК Количество,
	               |	РеализацияТоваровУслугУслуги.Цена КАК Цена,
	               |	РеализацияТоваровУслугУслуги.Ссылка КАК Ссылка,
	               |	РеализацияТоваровУслугУслуги.Маршрут КАК Маршрут,
	               |	РеализацияТоваровУслугУслуги.Заявка КАК Заявка,
	               |	РеализацияТоваровУслугУслуги.СуммаНДС КАК СуммаНДС,
	               |	РеализацияТоваровУслугУслуги.СуммаНДС + РеализацияТоваровУслугУслуги.Сумма КАК Всего,
	               |	РеализацияТоваровУслугУслуги.НомерСтроки КАК НомерСтроки,
	               |	РеализацияТоваровУслугУслуги.Ссылка.Номер КАК НомерДок,
	               |	РеализацияТоваровУслугУслуги.Ссылка.Дата КАК ДатаДок,
	               |	РеализацияТоваровУслугУслуги.Ссылка.ВалютаДокумента КАК Валюта,
	               |	РеализацияТоваровУслугУслуги.Ссылка.КурсВзаиморасчетов КАК Курс,
	               |	РеализацияТоваровУслугУслуги.Номенклатура.Наименование КАК ТоварНаименование,
	               |	РеализацияТоваровУслугУслуги.СтавкаНДС КАК СтавкаНДС,
	               |	РеализацияТоваровУслугУслуги.НомераТТН КАК НомераТТН,
	               |	РеализацияТоваровУслугУслуги.Ссылка.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
	               |	РеализацияТоваровУслугУслуги.Ссылка.ДоговорКонтрагента.Дата КАК ДоговорКонтрагентаДата,
	               |	РеализацияТоваровУслугУслуги.Заявка.НомерЗаказа КАК ЗаявкаНомерЗаказа
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	               |ГДЕ
	               |	РеализацияТоваровУслугУслуги.Ссылка В(&МассивОбъектов)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Ссылка";
	
	Если ИННКонтрагента = ИННМПК Тогда
		
		Запрос.Текст = "ВЫБРАТЬ	
		|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК Сумма,
		|	СУММА(РеализацияТоваровУслугУслуги.СуммаНДС) КАК СуммаНДС,
		|	СУММА(РеализацияТоваровУслугУслуги.Сумма + РеализацияТоваровУслугУслуги.СуммаНДС) КАК Всего
		|ПОМЕСТИТЬ ВременнаяТаблица
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|ГДЕ
		|	РеализацияТоваровУслугУслуги.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугУслуги.СтавкаНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК Ном,
		|	ВременнаяТаблица.Сумма КАК Сумма,
		|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18) КАК СтавкаНДС,
		|	ВременнаяТаблица.СуммаНДС КАК СуммаНДС,
		|	ВременнаяТаблица.Всего КАК Всего
		|ИЗ
		|	ВременнаяТаблица КАК ВременнаяТаблица";
		
	КонецЕсли;	
	
	
	ОбщаяВыборка = Запрос.Выполнить().Выгрузить();
	
	Возврат ОбщаяВыборка;
КонецФункции // ПолучитьТаблицуДокумента()

Функция ПолучитьСтрокуНДС(ВалютаД,НДС,Курс)
	
	Если НДС=0 Тогда
		СтрНДС 		= "Без НДС"; 
	Иначе
		СтвкаНДС 	= Перечисления.СтавкиНДС.НДС18;
		СумНДС 		= Формат(НДС * Курс, "ЧДЦ=2")+?(ЗначениеЗаполнено(ВалютаД)," "+ВалютаД.Наименование,"");
		СтрНДС 		= " в т.ч. НДС("+(СтвкаНДС)+")- "+СумНДС; 
	КонецЕсли; 
	
	Возврат СтрНДС;
	
КонецФункции // ПолучитьСтрокуНДС()

#КонецОбласти 

// Экспортная процедура печати, вызываемая из основной программы
//
// Параметры:
// ВХОДЯЩИЕ:
//  МассивОбъектовНазначения - Массив - список объектов ссылочного типа для печати документа
//                 Как правило, содержит один элемент с ссылкой на вызвавший форму объект (документ, справочник)
//
// ИСХОДЯЩИЕ:
//  КоллекцияПечатныхФорм - ТаблицаЗначений - таблица сформированных табличных документов.
//                 Как правило, содержит одну строку с именем текущей печатной формы
//  ОбъектыПечати - СписокЗначений - список объектов печати. 
//  ПараметрыВывода - Структура - Параметры сформированных табличных документов. Содержит поля:
//  						ДоступнаПечатьПоКомплектно - булево - по умолчанию Ложь
//							ПолучательЭлектронногоПисьма
//							ОтправительЭлектронногоПисьма
//
Процедура Печать(МассивОбъектовНазначения, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АКТ_НОВЫЙ") Тогда 
		ТабличныйДокумент = ПечатьВнешнейПечатнойФормы(МассивОбъектовНазначения, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АКТ_НОВЫЙ", "АКТ НОВЫЙ", ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

#Область СведенияОВнешнейОбработке
// Сервисная экспортная функция. Вызывается в основной программе при регистрации обработки в информационной базе
// Возвращает структуру с параметрами регистрации
//
// Возвращаемое значение:
//		Структура с полями:
//			Вид - строка, вид обработки, один из возможных: "ДополнительнаяОбработка", "ДополнительныйОтчет", 
//					"ЗаполнениеОбъекта", "Отчет", "ПечатнаяФорма", "СозданиеСвязанныхОбъектов"
//			Назначение - Массив строк имен объектов метаданных в формате: 
//					<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. 
//					Например, "Документ.СчФЗаказ" или "Справочник.*". Параметр имеет смысл только для назначаемых обработок, для глобальных может не задаваться.
//			Наименование - строка - Наименование обработки, которым будет заполнено наименование элемента справочника по умолчанию.
//			Информация  - строка - Краткая информация или описание по обработке.
//			Версия - строка - Версия обработки в формате “<старший номер>.<младший номер>” используется при загрузке обработок в информационную базу.
//			БезопасныйРежим - булево - Принимает значение Истина или Ложь, в зависимости от того, требуется ли устанавливать или отключать безопасный режим 
//							исполнения обработок. Если истина, обработка будет запущена в безопасном режиме. 
//
Функция СведенияОВнешнейОбработке() Экспорт
	//Инициализируем структуру с параметрами регистрации    	
	ПараметрыРегистрации = Новый Структура;
	// Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать.
	// Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов...
	
	МассивНазначений = Новый Массив;
	// Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
	// Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе,
	// которые поддерживают механизм ВПФ
	МассивНазначений.Добавить("Документ.РеализацияТоваровУслуг"); //Указываем документ к которому делаем внешнюю печ. форму   		
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	
	ПараметрыРегистрации.Вставить("Наименование", "АКТ (НОВЫЙ)"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);  // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
	// ++ 15.06.2021 ИлькаевВ vilkaev@yandex.ru /STL-4/
	//ПараметрыРегистрации.Вставить("Версия", "8.4");   // эти два параметра играют больше информационную роль,                                                                            
	// -- 15.06.2021 ИлькаевВ vilkaev@yandex.ru /STL-4/	 
	
	// ++ 15.06.2021 ИлькаевВ vilkaev@yandex.ru /STL-4/
	ПараметрыРегистрации.Вставить("Версия", "8.4.1"); // добавил автоопределение для параметров шапки по реквизитам организации                                                                            
	// -- 15.06.2021 ИлькаевВ vilkaev@yandex.ru /STL-4/	 
	
	
	
	ПараметрыРегистрации.Вставить("Информация", "АКТ (НОВЫЙ)"); // т.е. это то, что будет видеть пользователь в информации к обработке
	
	// Создадим таблицу команд (подробнее смотрим ниже)
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "АКТ (НОВЫЙ)", "АКТ_НОВЫЙ", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации; 	
КонецФункции
#КонецОбласти

#Область Вспомогательное
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ РЕГИСТРАЦИИ ОБРАБОТКИ
// Формирует структуру с параметрами регистрации регистрации обработки в информационной базе
//
// Параметры:
//	ОбъектыНазначенияФормы - Массив - Массив строк имен объектов метаданных в формате: 
//					<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. 
//					или строка с именем объекта метаданных 
//	НаименованиеОбработки - строка - Наименование обработки, которым будет заполнено наименование элемента справочника по умолчанию.
//							Необязательно, по умолчанию синоним или представление объекта
//	Информация  - строка - Краткая информация или описание обработки.
//							Необязательно, по умолчанию комментарий объекта
//	Версия - строка - Версия обработки в формате “<старший номер>.<младший номер>” используется при загрузке обработок в информационную базу.
//
//
// Возвращаемое значение:
//		Структура
//
Функция ПолучитьПараметрыРегистрации(ОбъектыНазначенияФормы = Неопределено, НаименованиеОбработки = "", Информация = "", Версия = "1.0")
	
	
	Если ТипЗнч(ОбъектыНазначенияФормы) = Тип("Строка") Тогда
		ОбъектНазначенияФормы = ОбъектыНазначенияФормы;
		ОбъектыНазначенияФормы = Новый Массив;
		ОбъектыНазначенияФормы.Добавить(ОбъектНазначенияФормы);
	КонецЕсли; 
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
	ПараметрыРегистрации.Вставить("Назначение", ОбъектыНазначенияФормы);
	
	Если Не ЗначениеЗаполнено(НаименованиеОбработки) Тогда
		НаименованиеОбработки = ЭтотОбъект.Метаданные().Представление();
	КонецЕсли; 
	ПараметрыРегистрации.Вставить("Наименование", НаименованиеОбработки);
	
	Если Не ЗначениеЗаполнено(Информация) Тогда
		Информация = ЭтотОбъект.Метаданные().Комментарий;
	КонецЕсли; 
	ПараметрыРегистрации.Вставить("Информация", Информация);
	
	ПараметрыРегистрации.Вставить("Версия", Версия);
	
	
	Возврат ПараметрыРегистрации;
	
	
КонецФункции

// Формирует таблицу значений с командами печати
//	
// Возвращаемое значение:
//		ТаблицаЗначений
//
Функция ПолучитьТаблицуКоманд()
	
	
	Команды = Новый ТаблицаЗначений;
	
	//Представление команды в пользовательском интерфейсе
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	
	//Уникальный идентификатор команды или имя макета печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	
	//Способ вызова команды: "ОткрытиеФормы", "ВызовКлиентскогоМетода", "ВызовСерверногоМетода"
	// "ОткрытиеФормы" - применяется только для отчетов и дополнительных отчетов
	// "ВызовКлиентскогоМетода" - вызов процедуры Печать(), определённой в модуле формы обработки
	// "ВызовСерверногоМетода" - вызов процедуры Печать(), определённой в модуле объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	
	//Показывать оповещение.
	//Если Истина, требуется показать оповещение при начале и при завершении работы обработки. 
	//Имеет смысл только при запуске обработки без открытия формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	
	//Дополнительный модификатор команды. 
	//Используется для дополнительных обработок печатных форм на основе табличных макетов.
	//Для таких команд должен содержать строку ПечатьMXL
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	
	Возврат Команды; 
КонецФункции

// Вспомогательная процедура.
//
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ВызовСерверногоМетода", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;      
КонецПроцедуры

#КонецОбласти  	

#Область ИНН
ИННСанинбев					= "5020037784";	
ИННПочтаРоссии				= "7724261610";	
ИННФерреро  				= "5044018861";
ИННРусвинил					= "5262218620";
ИННСИБУР				 	= "7727547261"; 
ИННМВИДЕО  					= "7707548740";
ИННКимберлиКларк			= "7709222373";
ИНННестле 					= "7705739450";
ИННПолипластик				= "5021013384";
ИННКокаКола 				= "7701215046";
ИННМПК  					= "5029104266";
ИННСпортмастер				= "7728551528";
ИННБалтика					= "7802849641";
ИННСетраЛубрикатс 			= "7707240176";
ИННБунге 					= "7743084941";
ИННГрузовыеПеревозки		= "7727816669";
ИННКордиант 				= "7601001509";
ИННАвтодизель 				= "7601000640";
ИННСалаир				 	= "7715857460";
ИННГас						= "8904075460";
ИННСТМ_Сервис				= "6672337623";
#КонецОбласти